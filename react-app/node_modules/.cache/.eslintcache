[{"/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/index.js":"1","/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/App.js":"2","/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/reportWebVitals.js":"3","/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/Main.js":"4","/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/Profile.js":"5","/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/EditQuestions.js":"6","/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/Question.js":"7","/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/ViewData.js":"8","/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/Login.js":"9","/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/api/client.js":"10","/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/Daylog.js":"11","/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/SignUp.js":"12","/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/UseWindowDimensions.js":"13","/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/LogDay.js":"14","/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/utils/HelperFunctions.js":"15","/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/ViewByDate.js":"16","/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/ViewByQuestion.js":"17"},{"size":500,"mtime":1638187462727,"results":"18","hashOfConfig":"19"},{"size":1338,"mtime":1638872372156,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1638187462727,"results":"21","hashOfConfig":"19"},{"size":4353,"mtime":1638973016737,"results":"22","hashOfConfig":"19"},{"size":5933,"mtime":1638814460508,"results":"23","hashOfConfig":"19"},{"size":6453,"mtime":1638982371910,"results":"24","hashOfConfig":"19"},{"size":15184,"mtime":1638982371913,"results":"25","hashOfConfig":"19"},{"size":1766,"mtime":1638956174772,"results":"26","hashOfConfig":"19"},{"size":2758,"mtime":1638627458802,"results":"27","hashOfConfig":"19"},{"size":5921,"mtime":1638950033359,"results":"28","hashOfConfig":"19"},{"size":6101,"mtime":1638547466151,"results":"29","hashOfConfig":"19"},{"size":5563,"mtime":1638631535296,"results":"30","hashOfConfig":"19"},{"size":625,"mtime":1635071596471,"results":"31","hashOfConfig":"19"},{"size":7875,"mtime":1638987047547,"results":"32","hashOfConfig":"19"},{"size":259,"mtime":1638982371917,"results":"33","hashOfConfig":"19"},{"size":2644,"mtime":1638950033366,"results":"34","hashOfConfig":"19"},{"size":16395,"mtime":1638991491661,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1guqz8q",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/index.js",[],["77","78"],"/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/App.js",["79","80"],"import React, {useEffect, useState} from 'react'\n\nimport logo from './logo.svg';\nimport Main from './components/Main'\nimport Login from './components/Login'\nimport './App.css';\nimport {getCurrentUserAPIMethod} from './api/client.js';\n\nfunction App() {\n    const [login, setLogin] = useState(false);\n    const [currUser, setCurrUser] = useState({});\n\n    useEffect(() =>{\n        getCurrentUserAPIMethod().then((user) => {\n            //console.log(user);\n            if (user != null && Object.keys(user).length != 0) {\n                setLogin(true);\n                setCurrUser(user);\n            }\n            else {\n                setLogin(false);\n                //console.log(login)\n                setCurrUser({});\n                //console.log(currUser)\n            }\n        });\n    }, [login])\n\n    useEffect(()=>{\n        setCurrUser(currUser);\n    }, [currUser])\n\n  return (\n      <div className=\"App\">\n          {login ?\n              <Main\n                  login = {login}\n                  setLogin = {setLogin}\n                  currUser = {currUser}\n                  setCurrUser = {setCurrUser}\n              ></Main>\n              :\n              <Login\n                  setLogin = {setLogin}\n                  setCurrUser = {setCurrUser}\n              ></Login>\n          }\n      </div>\n  );\n}\n\nexport default App;\n","/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/reportWebVitals.js",[],"/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/Main.js",["81","82","83","84","85","86","87"],"/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/Profile.js",["88","89"],"import React, {useEffect, useState} from 'react'\nimport {\n    getAddressByIdAPIMethod,\n    getCurrentUserAPIMethod,\n    logoutUserAPIMethod,\n    updateUserAPIMethod,\n    uploadImageToCloudinaryAPIMethod\n} from \"../api/client\";\n\n\nfunction Profile(props) {\n\n    const [name, setName] = useState(props.currUser.name);\n    const [email, setEmail] = useState(props.currUser.email);\n    const [addr1, setAddr1] = useState();\n    const [addr2, setAddr2] = useState();\n    const [profileUrl, setProfileUrl] = useState(props.currUser.profile_url)\n    const [login, setLogin] = useState();\n\n    useEffect(() => {\n        let currUser = props.currUser;\n        if(currUser._id !== undefined){\n            setName(currUser.name);\n            setEmail(currUser.email);\n            console.log(currUser)\n            getAddressByIdAPIMethod(currUser.address).then((addr)=>{\n                setAddr1(addr.address1);\n                setAddr2(addr.address2);\n            })\n            setProfileUrl(currUser.profile_url)\n        }\n    }, [props.currUser])\n\n\n\n\n    let handleChange = (prop) => (event) => {\n        if (prop === \"name\"){\n            setName(event.target.value);\n        }\n        else if (prop === \"email\"){\n            setEmail(event.target.value);\n        }\n        else if (prop === \"addr1\"){\n            setAddr1(event.target.value);\n        }\n        else if (prop === \"addr2\"){\n            setAddr2(event.target.value);\n        }\n        else if (prop === \"chooseImg\"){\n            event.preventDefault();\n            if (event.target.files && event.target.files[0]) {\n                const selectedFile = event.target.files[0];\n                const formData = new FormData();\n                const unsignedUploadPreset = 'e9uuow7f'\n                formData.append('file', selectedFile);\n                formData.append('upload_preset', unsignedUploadPreset);\n                console.log(\"Cloudinary upload\");\n                uploadImageToCloudinaryAPIMethod(formData).then((response) => {\n                    setProfileUrl(response.url);\n                });\n            }\n        }\n        else if  (prop === \"removeImg\"){\n            event.preventDefault();\n            setProfileUrl(\"\");\n        }\n        else if (prop === \"logout\"){\n            setLogin(false);\n            logoutUserAPIMethod().then(()=>{\n                props.setLogin(false);\n            });\n        }\n        else if (prop === \"save\"){\n            event.preventDefault();\n            let currUser = props.currUser;\n            let newUser = {\n                'name': name,\n                \"email\": email,\n                'password': currUser.password,\n                'address1': addr1,\n                'address2': addr2,\n                'profile_url': profileUrl\n            }\n            console.log(newUser)\n            updateUserAPIMethod(currUser, newUser).then(()=>{\n                getCurrentUserAPIMethod().then(nUser =>{\n                    console.log(nUser)\n                    props.setCurrUser(nUser)\n                })\n            });\n        }\n    }\n\n    return (\n        <div className={\"Profile\"}>\n            <h3>Edit Profile</h3>\n            <form className=\"form\">\n\n                <div className={\"ProfileTabs\"}>\n                    <h3>Profile photo</h3>\n                    <div className={\"ProfileTab1\"} style={{display: \"flex\"}}>\n\n                            {/*default img for now*/}\n                        <img src= {profileUrl? profileUrl:'https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg'} style={{width: '40px', borderRadius: '50%'}}/>\n\n                        <label className={\"ChooseImg\"}>\n                            <input\n                                style={{display: 'none'}}\n                                id=\"file-upload\"\n                                // className=\"ChooseImg\"\n                                type=\"file\"\n                                name=\"image\"\n                                accept=\"image/*\"\n                                onChange={handleChange(\"chooseImg\")}/>\n                            Choose new Image\n                        </label>\n\n\n                        <button className={\"RemoveAndLogOut\"} onClick={handleChange(\"removeImg\")}>Remove image</button>\n                    </div>\n                </div>\n\n                <div className={\"ProfileTabs\"}>\n                    <h3>Name</h3>\n                    <input type=\"text\"\n                           id=\"iName\"\n                           name=\"Name\"\n                           value = {name}\n                           onChange={handleChange(\"name\")}></input>\n                </div>\n\n                <div className={\"ProfileTabs\"}>\n                    <h3>Email</h3>\n                    <input type=\"text\"\n                           id=\"iEmail\"\n                           name=\"Email\"\n                           value = {email}\n                           onChange={handleChange(\"email\")}></input>\n                </div>\n\n                <div className={\"ProfileTabs\"}>\n                    <h3>Address</h3>\n                    <input type=\"text\"\n                           id=\"iAddr1\"\n                           name=\"Addr1\"\n                           value = {addr1}\n                           onChange={handleChange(\"addr1\")}></input>\n                    <input type=\"text\"\n                           id=\"iAddr2\"\n                           name=\"Addr2\"\n                           value = {addr2}\n                           onChange={handleChange(\"addr2\")}></input>\n                </div>\n\n                <div style={{display: \"flex\", justifyContent: 'space-between', background: 'transparent'}}>\n                    <button className={\"Save\"} onClick={handleChange(\"save\")}>Save</button>\n                    <button className={\"RemoveAndLogOut\"} onClick={handleChange(\"logout\")}>Logout</button>\n                </div>\n\n            </form>\n        </div>\n    );\n}\nexport default Profile","/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/EditQuestions.js",[],"/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/Question.js",["90","91","92","93","94","95","96","97","98","99","100","101","102","103"],"/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/ViewData.js",["104","105"],"/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/Login.js",["106","107","108"],"import React, {useEffect, useState} from 'react'\nimport '../App.css';\nimport useWindowDimensions from \"./UseWindowDimensions\";\nimport SignUp from \"./SignUp\";\nimport {loginUserAPIMethod} from \"../api/client\";\n\nfunction Login(props){\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [showSignup, setShowSignup] = useState(false);\n    const [error, setError] = useState();\n\n    const GetWidth = () => {\n        const {width, height} = useWindowDimensions();\n        return width;\n    };\n\n    let width = GetWidth();\n\n    const login = (e) => {\n        e.preventDefault();\n        let userInfo = {\"email\": email, \"password\": password};\n        loginUserAPIMethod(userInfo).then((status) => {\n            console.log(status);\n            if (status) {\n                setError(\"\");\n                props.setLogin(true);\n            }\n            else {\n                setError(\"login failed\");\n                props.setLogin(false);\n            }\n        });\n    }\n\n    return (\n        <div className='LoginPage'>\n            <h1 style={{textAlign: 'center'}}>\n                Day Logger\n            </h1>\n            <h2 style={{textAlign: 'center'}}>\n                Organize your daily records in one place.\n            </h2>\n\n            <div className=\"Login\">\n                <form className='LoginForm' style = {{textAlign: 'center'}}>\n                    <p>Email</p>\n                    <input type=\"text\"\n                           id=\"Email\"\n                           name=\"Email\"\n                           value = {email}\n                           onChange={(e) => setEmail(e.target.value)}></input>\n                    <p>Password</p>\n                    <input type=\"text\"\n                           id=\"Password\"\n                           name=\"Password\"\n                           value = {password}\n                           onChange={(e) => setPassword(e.target.value)}></input>\n\n                    <div>\n                        <h3 style = {{color: 'red'}}>{error? error: \" \"}</h3>\n                    </div>\n\n                    <button onClick={login} type=\"submit\" className=\"LoginButton\">Log in</button>\n\n                </form>\n\n            </div>\n            <hr style={{width: \"100%\"}}></hr>\n            <div style={{textAlign: \"center\"}}>\n                <button onClick={() => setShowSignup(true)} className=\"CreateAccount\">Create New Account</button>\n            </div>\n            {showSignup ?\n                <SignUp\n                    showSignup={showSignup}\n                    setShowSignup = {setShowSignup}\n                    setLogin={props.setLogin}\n                ></SignUp>\n                : null\n            }\n\n\n        </div>\n\n    );\n}\n\nexport default Login;","/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/api/client.js",[],"/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/Daylog.js",["109","110","111","112","113","114"],"import React, {useEffect, useState} from 'react'\nimport Question from \"./Question\";\nimport {\n    createDaylogAPIMethod,\n    createQuestionAPIMethod,\n    getCurrentUserAPIMethod,\n    getDaylogsAPIMethod,\n    getQuestionsByDaylogIdAPIMethod\n} from \"../api/client\";\n\nfunction Daylog(props){\n    const [daylogs, setDaylogs] = useState([]);\n    const [currDaylog, setCurrDaylog] = useState({});\n    const [currQuestions, setCurrQuestions] = useState([]);\n    const [currDate, setCurrDate] = useState();\n    const [currDaylogIndex, setCurrDayLogIndex] = useState();\n\n    useEffect(() => {\n        setDaylogs(props.daylogs);\n    }, [props.daylogs]);\n\n    useEffect(() => {\n        if (daylogs != undefined && daylogs.length != 0) {\n            setDaylogs(daylogs);\n            setCurrDaylog(daylogs[0]);\n            setCurrDate(dateToString(new Date(daylogs[0].date)));\n            setCurrDayLogIndex(0);\n            getQuestionsByDaylogIdAPIMethod(daylogs[0]._id).then((questions) => {\n                setCurrQuestions(sortQuestionsByDate(questions));\n            });\n        }\n    }, [daylogs]);\n\n    const previous = () =>{\n        if(currDaylogIndex+1 < daylogs.length) {\n            setCurrDaylog(daylogs[currDaylogIndex + 1]);\n            setCurrDate(dateToString(new Date(daylogs[currDaylogIndex + 1].date)));\n            getQuestionsByDaylogIdAPIMethod(daylogs[currDaylogIndex + 1]._id).then((questions) => {\n                setCurrQuestions(sortQuestionsByDate(questions));\n                setCurrDayLogIndex(currDaylogIndex + 1);\n            });\n        }\n    }\n    const next = () =>{\n        if(currDaylogIndex-1 >= 0) {\n            setCurrDaylog(daylogs[currDaylogIndex-1]);\n            setCurrDate(dateToString(new Date(daylogs[currDaylogIndex -1].date)));\n\n            getQuestionsByDaylogIdAPIMethod(daylogs[currDaylogIndex-1]._id).then((questions) => {\n                setCurrQuestions(sortQuestionsByDate(questions));\n                setCurrDayLogIndex(currDaylogIndex-1);\n            });\n        }\n\n    }\n\n    const dateToString = (date) => {\n        return date.getFullYear() + \" / \" + (date.getMonth() + 1) + \" / \" + date.getDate();\n    }\n\n    const sortQuestionsByDate = (list) => {\n        return list.sort((a, b) => new Date(a.mdate) - new Date(b.mdate));\n    }\n    const test2 = () => {\n        // let nDayLog = {\n        //     date: new Date(\"2019-10-15\"),\n        //     creator: \"61a8ec72b1b3f8f9fb27f94f\"\n        // }\n        // createDaylogAPIMethod(nDayLog).then(()=>{\n        //\n        // })\n        getQuestionsByDaylogIdAPIMethod(\"61a8ec72b1b3f8f9fb27f94f\").then((questions)=>{\n            console.log(questions);\n        })\n        console.log(daylogs)\n    }\n    const populateQuestions = () => {\n        let questions = [\n            {\n                type: 'Text',\n                header: 'Sample Question 1 (Text type)',\n                answer: {\n                    text: 'Sample answer 1'\n                },\n                mdate: new Date(\"2021-12-01\"),\n                daylog: currDaylog._id\n            },\n            {\n                type: 'Number',\n                header: 'Sample Question 2 (Number type)',\n                answer: {\n                    number: 2\n                },\n                mdate: new Date(\"2021-12-02\"),\n                daylog: currDaylog._id\n            },\n            {\n                type: 'Boolean',\n                header: 'Sample Question 3 (Boolean type)',\n                answer: {\n                    boolean: true\n                },\n                mdate: new Date(\"2021-12-03\"),\n                daylog: currDaylog._id\n            },\n            {\n                type: 'MultipleChoice',\n                header: 'Sample Question 4 (MultipleChoice type)',\n                answer: {\n                    boolean: true\n                },\n                mdate: new Date(\"2021-12-04\"),\n                daylog: currDaylog._id\n            }\n        ];\n\n        for (let i = 0; i < 4; i++) {\n            createQuestionAPIMethod(questions[i]).then((question) => {\n                console.log(question + \" \" + (i + 1) + \" added.\");\n            });\n        }\n        setCurrQuestions(questions);\n    }\n\n    return (\n        currDate? (\n                <div>\n                    <div className=\"LogSelectionBar\" style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                        <button onClick={previous}>\n                            <h2>{\"<\"}</h2>\n                        </button>\n                        <h2>\n                            {currDate}\n                        </h2>\n                        <button onClick={next}>\n                            <h2>{\">\"}</h2>\n                        </button>\n                    </div>\n                    <div>\n                        {\n                            currQuestions.length != 0 ?\n                                (currQuestions.map((question) =>\n                                    <li style={{listStyle: \"none\",padding: \"5px\"}}>\n                                        <Question\n                                            type = {question.type}\n                                            header = {question.header}\n                                            answer = {question.answer}\n                                            mdate = {question.mdate}\n                                            date = {currDate}\n                                            editMode = {false}\n                                        />\n                                    </li>\n                                ))\n                                :\n                                <></>\n                        }\n                    </div>\n                    <div className=\"SubmitButton\" >\n                        <button>Submit</button>\n                    </div>\n\n                    <button onClick={populateQuestions}>\n                        test\n                    </button>\n                    <button onClick={test2}>\n                        test2\n                    </button>\n\n\n                </div>):\n                <></>\n    );\n}\nexport default Daylog\n",["115","116"],"/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/SignUp.js",["117","118","119","120"],"import react, {useEffect, useState} from \"react\";\nimport React from \"react\";\nimport {registerUserAPIMethod, uploadImageToCloudinaryAPIMethod} from \"../api/client\";\n\nfunction SignUp(props) {\n    const [name, setName] = useState();\n    const [email,setEmail] = useState();\n    const [pw,setPw] = useState();\n    const [addr1,setAddr1] = useState();\n    const [addr2,setAddr2] = useState();\n    const [profileUrl, setProfileUrl] = useState(\"\");\n    const [error, setError] = useState();\n\n\n    useEffect(() => {\n        setProfileUrl(profileUrl);\n    },[profileUrl])\n    useEffect(() => {\n        setError(error);\n    },[error])\n\n    const testRegister = (e) => {\n        e.preventDefault();\n        if (/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/.test(email)) { // email validation\n            const user1 = {\n                \"name\" : name,\n                \"email\" : email,\n                \"password\" : pw,\n                \"address1\" : addr1,\n                \"address2\" : addr2,\n                \"profile_url\" : profileUrl\n            }\n            registerUserAPIMethod(user1).then(ret => {\n                console.log(ret);\n                if(ret){\n                    props.setShowSignup(false);\n                    props.setLogin(true);\n                }\n                else{\n                    setError(\"Invalid information. Properly fill out the information\");\n                }\n            });\n        }\n        else {\n            setError(\"Invalid email format\");\n        }\n    }\n\n\n    let handleChange = (prop) => (event) => {\n        if (prop === \"name\"){\n            setName(event.target.value);\n        }\n        else if (prop === \"email\"){\n            setEmail(event.target.value);\n        }\n        else if (prop === \"pw\"){\n            setPw(event.target.value);\n        }\n        else if (prop === \"addr1\"){\n            setAddr1(event.target.value);\n        }\n        else if (prop === \"addr2\"){\n            setAddr2(event.target.value);\n        }\n        else if (prop === \"profileUrl\"){\n            if (event.target.files && event.target.files[0]) {\n                const selectedFile = event.target.files[0];\n\n                const formData = new FormData();\n                const unsignedUploadPreset = 'e9uuow7f'\n                formData.append('file', selectedFile);\n                formData.append('upload_preset', unsignedUploadPreset);\n\n                console.log(\"Cloudinary upload\");\n                uploadImageToCloudinaryAPIMethod(formData).then((response) => {\n                    setProfileUrl(response.url);\n                });\n            }\n        }\n        else if (prop =='x'){\n            event.preventDefault();\n            props.setShowSignup(false);\n            setError(\"\");\n        }\n    }\n\n    return(\n        <div className=\"SignUp\">\n            <form className=\"SignUpContents\">\n                <div style={{display: 'flex' ,justifyContent: 'space-between'}}>\n                    <h2>Sign Up</h2>\n                    <button id=\"x\" style={{border: 'none', background: 'transparent', justifyContent: 'space-between'}} onClick={handleChange(\"x\")}>X</button>\n                </div>\n\n                <p style={{margin: 0}}>Name</p>\n                <input type=\"text\"\n                       id=\"iName\"\n                       name=\"Name\"\n                       value = {name}\n                       style={{width: '100%', alignItems: 'center'}}\n                       onChange={handleChange(\"name\")}></input>\n\n                <p style={{margin: 0}}>Email</p>\n                <input type=\"text\"\n                       id=\"iEmail\"\n                       name=\"Email\"\n                       value = {email}\n                       style={{width: '100%', alignItems: 'center'}}\n                       onChange={handleChange(\"email\")}></input>\n\n                <p style={{margin: 0}}>Password</p>\n                <input type=\"text\"\n                       id=\"iPw\"\n                       name=\"pw\"\n                       value = {pw}\n                       style={{width: '100%', alignItems: 'center'}}\n                       onChange={handleChange(\"pw\")}></input>\n\n                <p style={{margin: 0}}>Address 1</p>\n                <input type=\"text\"\n                       id=\"iAddr1\"\n                       name=\"addr1\"\n                       value = {addr1}\n                       style={{width: '100%', alignItems: 'center'}}\n                       onChange={handleChange(\"addr1\")}></input>\n\n                <p style={{margin: 0}}>Address 2</p>\n                <input type=\"text\"\n                       id=\"iAddr2\"\n                       name=\"addr2\"\n                       value = {addr2}\n                       style={{width: '100%', alignItems: 'center'}}\n                       onChange={handleChange(\"addr2\")}></input>\n\n                <p style={{margin: 0}}>Profile Url</p>\n                <div>\n                    <img className=\"avatar\"\n                         src = {profileUrl}\n                         style={{width: '40px', borderRadius: '50%'}}\n                    />\n                    <input id=\"file-upload\" className=\"custom-file-upload\" placeholder=\"Choose New Image\" type=\"file\" name=\"image\" accept=\"image/*\" id=\"cloudinary\" onChange={handleChange(\"profileUrl\")}/>\n                </div>\n\n                <h3 style = {{color: 'red'}}>{error? error: \" \"}</h3>\n\n                <div className=\"SubmitButton\" style={{margin: 0}}>\n                    <button onClick={testRegister} type=\"submit\" >Save</button>\n                </div>\n\n            </form>\n        </div>\n    )\n};\nexport default SignUp;\n","/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/UseWindowDimensions.js",[],"/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/LogDay.js",["121","122"],"/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/utils/HelperFunctions.js",[],"/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/ViewByDate.js",["123","124","125","126"],"/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/ViewByQuestion.js",["127","128","129","130","131","132","133","134","135","136","137"],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":3,"column":8,"nodeType":"144","messageId":"145","endLine":3,"endColumn":12},{"ruleId":"146","severity":1,"message":"147","line":16,"column":58,"nodeType":"148","messageId":"149","endLine":16,"endColumn":60},{"ruleId":"142","severity":1,"message":"150","line":10,"column":5,"nodeType":"144","messageId":"145","endLine":10,"endColumn":24},{"ruleId":"151","severity":1,"message":"152","line":56,"column":33,"nodeType":"153","messageId":"154","endLine":56,"endColumn":35},{"ruleId":"155","severity":1,"message":"156","line":75,"column":21,"nodeType":"157","endLine":75,"endColumn":179},{"ruleId":"146","severity":1,"message":"158","line":84,"column":29,"nodeType":"148","messageId":"149","endLine":84,"endColumn":31},{"ruleId":"146","severity":1,"message":"158","line":93,"column":33,"nodeType":"148","messageId":"149","endLine":93,"endColumn":35},{"ruleId":"146","severity":1,"message":"158","line":102,"column":37,"nodeType":"148","messageId":"149","endLine":102,"endColumn":39},{"ruleId":"146","severity":1,"message":"158","line":109,"column":41,"nodeType":"148","messageId":"149","endLine":109,"endColumn":43},{"ruleId":"142","severity":1,"message":"159","line":18,"column":12,"nodeType":"144","messageId":"145","endLine":18,"endColumn":17},{"ruleId":"155","severity":1,"message":"156","line":105,"column":25,"nodeType":"157","endLine":105,"endColumn":191},{"ruleId":"142","severity":1,"message":"160","line":2,"column":9,"nodeType":"144","messageId":"145","endLine":2,"endColumn":15},{"ruleId":"142","severity":1,"message":"161","line":3,"column":9,"nodeType":"144","messageId":"145","endLine":3,"endColumn":30},{"ruleId":"142","severity":1,"message":"162","line":3,"column":32,"nodeType":"144","messageId":"145","endLine":3,"endColumn":53},{"ruleId":"142","severity":1,"message":"163","line":4,"column":9,"nodeType":"144","messageId":"145","endLine":4,"endColumn":19},{"ruleId":"164","severity":1,"message":"165","line":35,"column":8,"nodeType":"166","endLine":35,"endColumn":15,"suggestions":"167"},{"ruleId":"164","severity":1,"message":"168","line":50,"column":8,"nodeType":"166","endLine":50,"endColumn":31,"suggestions":"169"},{"ruleId":"146","severity":1,"message":"158","line":75,"column":26,"nodeType":"148","messageId":"149","endLine":75,"endColumn":28},{"ruleId":"146","severity":1,"message":"158","line":86,"column":30,"nodeType":"148","messageId":"149","endLine":86,"endColumn":32},{"ruleId":"146","severity":1,"message":"158","line":98,"column":34,"nodeType":"148","messageId":"149","endLine":98,"endColumn":36},{"ruleId":"146","severity":1,"message":"158","line":117,"column":38,"nodeType":"148","messageId":"149","endLine":117,"endColumn":40},{"ruleId":"146","severity":1,"message":"158","line":194,"column":30,"nodeType":"148","messageId":"149","endLine":194,"endColumn":32},{"ruleId":"146","severity":1,"message":"158","line":206,"column":34,"nodeType":"148","messageId":"149","endLine":206,"endColumn":36},{"ruleId":"146","severity":1,"message":"158","line":219,"column":38,"nodeType":"148","messageId":"149","endLine":219,"endColumn":40},{"ruleId":"146","severity":1,"message":"158","line":240,"column":42,"nodeType":"148","messageId":"149","endLine":240,"endColumn":44},{"ruleId":"142","severity":1,"message":"170","line":15,"column":12,"nodeType":"144","messageId":"145","endLine":15,"endColumn":30},{"ruleId":"142","severity":1,"message":"171","line":15,"column":32,"nodeType":"144","messageId":"145","endLine":15,"endColumn":53},{"ruleId":"142","severity":1,"message":"172","line":1,"column":16,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"173","line":14,"column":23,"nodeType":"144","messageId":"145","endLine":14,"endColumn":29},{"ruleId":"142","severity":1,"message":"174","line":18,"column":9,"nodeType":"144","messageId":"145","endLine":18,"endColumn":14},{"ruleId":"142","severity":1,"message":"175","line":4,"column":5,"nodeType":"144","messageId":"145","endLine":4,"endColumn":26},{"ruleId":"142","severity":1,"message":"176","line":6,"column":5,"nodeType":"144","messageId":"145","endLine":6,"endColumn":28},{"ruleId":"142","severity":1,"message":"177","line":7,"column":5,"nodeType":"144","messageId":"145","endLine":7,"endColumn":24},{"ruleId":"146","severity":1,"message":"147","line":23,"column":21,"nodeType":"148","messageId":"149","endLine":23,"endColumn":23},{"ruleId":"146","severity":1,"message":"147","line":23,"column":52,"nodeType":"148","messageId":"149","endLine":23,"endColumn":54},{"ruleId":"146","severity":1,"message":"147","line":141,"column":50,"nodeType":"148","messageId":"149","endLine":141,"endColumn":52},{"ruleId":"138","replacedBy":"178"},{"ruleId":"140","replacedBy":"179"},{"ruleId":"142","severity":1,"message":"180","line":1,"column":8,"nodeType":"144","messageId":"145","endLine":1,"endColumn":13},{"ruleId":"146","severity":1,"message":"158","line":81,"column":23,"nodeType":"148","messageId":"149","endLine":81,"endColumn":25},{"ruleId":"155","severity":1,"message":"156","line":138,"column":21,"nodeType":"157","endLine":141,"endColumn":23},{"ruleId":"181","severity":1,"message":"182","line":142,"column":149,"nodeType":"183","messageId":"184","endLine":142,"endColumn":164},{"ruleId":"146","severity":1,"message":"158","line":75,"column":175,"nodeType":"148","messageId":"149","endLine":75,"endColumn":177},{"ruleId":"146","severity":1,"message":"158","line":127,"column":27,"nodeType":"148","messageId":"149","endLine":127,"endColumn":29},{"ruleId":"142","severity":1,"message":"162","line":4,"column":5,"nodeType":"144","messageId":"145","endLine":4,"endColumn":26},{"ruleId":"142","severity":1,"message":"185","line":5,"column":5,"nodeType":"144","messageId":"145","endLine":5,"endColumn":28},{"ruleId":"142","severity":1,"message":"186","line":6,"column":5,"nodeType":"144","messageId":"145","endLine":6,"endColumn":32},{"ruleId":"142","severity":1,"message":"187","line":7,"column":5,"nodeType":"144","messageId":"145","endLine":7,"endColumn":28},{"ruleId":"142","severity":1,"message":"188","line":15,"column":12,"nodeType":"144","messageId":"145","endLine":15,"endColumn":21},{"ruleId":"142","severity":1,"message":"189","line":16,"column":12,"nodeType":"144","messageId":"145","endLine":16,"endColumn":21},{"ruleId":"164","severity":1,"message":"190","line":69,"column":7,"nodeType":"166","endLine":69,"endColumn":36,"suggestions":"191"},{"ruleId":"164","severity":1,"message":"192","line":77,"column":7,"nodeType":"166","endLine":77,"endColumn":40,"suggestions":"193"},{"ruleId":"164","severity":1,"message":"194","line":85,"column":7,"nodeType":"166","endLine":85,"endColumn":62,"suggestions":"195"},{"ruleId":"164","severity":1,"message":"196","line":93,"column":8,"nodeType":"166","endLine":93,"endColumn":67,"suggestions":"197"},{"ruleId":"151","severity":1,"message":"152","line":144,"column":21,"nodeType":"153","messageId":"154","endLine":144,"endColumn":23},{"ruleId":"151","severity":1,"message":"152","line":168,"column":21,"nodeType":"153","messageId":"154","endLine":168,"endColumn":23},{"ruleId":"142","severity":1,"message":"198","line":179,"column":13,"nodeType":"144","messageId":"145","endLine":179,"endColumn":15},{"ruleId":"142","severity":1,"message":"199","line":180,"column":13,"nodeType":"144","messageId":"145","endLine":180,"endColumn":15},{"ruleId":"142","severity":1,"message":"200","line":181,"column":13,"nodeType":"144","messageId":"145","endLine":181,"endColumn":15},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'logoutUserAPIMethod' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '===' and instead saw '=='.","'login' is assigned a value but never used.","'nanoid' is defined but never used.","'getQuestionsAPIMethod' is defined but never used.","'getResponsesAPIMethod' is defined but never used.","'sortByDate' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currResponse'. Either include it or remove the dependency array.","ArrayExpression",["203"],"React Hook useEffect has missing dependencies: 'date' and 'questionId'. Either include them or remove the dependency array.",["204"],"'showViewByQuestion' is assigned a value but never used.","'setShowViewByQuestion' is assigned a value but never used.","'useEffect' is defined but never used.","'height' is assigned a value but never used.","'width' is assigned a value but never used.","'createDaylogAPIMethod' is defined but never used.","'getCurrentUserAPIMethod' is defined but never used.","'getDaylogsAPIMethod' is defined but never used.",["201"],["202"],"'react' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'createResponseAPIMethod' is defined but never used.","'deleteResponseByIdAPIMethod' is defined but never used.","'updateResponseAPIMethod' is defined but never used.","'responses' is assigned a value but never used.","'questions' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'textQuestionIndex'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrTextResponses' needs the current value of 'textQuestionIndex'.",["205"],"React Hook useEffect has a missing dependency: 'numberQuestionIndex'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrNumberResponses' needs the current value of 'numberQuestionIndex'.",["206"],"React Hook useEffect has a missing dependency: 'boolDataGen'. Either include it or remove the dependency array.",["207"],"React Hook useEffect has a missing dependency: 'multDataGen'. Either include it or remove the dependency array.",["208"],"'t1' is assigned a value but never used.","'t2' is assigned a value but never used.","'t3' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},"Update the dependencies array to be: [currResponse, props]",{"range":"221","text":"222"},"Update the dependencies array to be: [responses, props.date, questionId, date]",{"range":"223","text":"224"},"Update the dependencies array to be: [textResponses, textQuestion, textQuestionIndex]",{"range":"225","text":"226"},"Update the dependencies array to be: [numberResponses, numberQuestion, numberQuestionIndex]",{"range":"227","text":"228"},"Update the dependencies array to be: [booleanResponses, booleanQuestion, booleanQuestionIndex, boolDataGen]",{"range":"229","text":"230"},"Update the dependencies array to be: [multipleResponses, multipleQuestion, multipleQuestionIndex, multDataGen]",{"range":"231","text":"232"},[1471,1478],"[currResponse, props]",[2005,2028],"[responses, props.date, questionId, date]",[2761,2790],"[textResponses, textQuestion, textQuestionIndex]",[3052,3085],"[numberResponses, numberQuestion, numberQuestionIndex]",[3298,3353],"[booleanResponses, booleanQuestion, booleanQuestionIndex, boolDataGen]",[3572,3631],"[multipleResponses, multipleQuestion, multipleQuestionIndex, multDataGen]"]