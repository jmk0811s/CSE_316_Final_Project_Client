{"ast":null,"code":"var _jsxFileName = \"/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/Question.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport { getQuestionsAPIMethod, getResponsesAPIMethod } from \"../api/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Question(props) {\n  _s();\n\n  const [readOnly, setReadOnly] = useState(false);\n  const [editMode, setEditMode] = useState(props.editMode);\n  const [type, setType] = useState(props.type);\n  const [header, setHeader] = useState(props.header);\n  const [choices, setChoices] = useState(props.choices);\n  const [mdate, setMDate] = useState(props.mdate);\n  const [nanoId, setNanoId] = useState(props.nanoid);\n  const [questions, setQuestions] = useState(props.questions);\n  const [responses, setResponses] = useState(props.responses);\n  const [currResponse, setCurrResponse] = useState();\n  const [questionId, setQuestionId] = useState(props.questionId);\n  const [date, setDate] = useState(props.date);\n  const [tempResList, setTempResList] = useState([]);\n  useEffect(() => {\n    setDate(props.date);\n    setEditMode(props.editMode);\n    setType(props.type);\n    setChoices(props.choices);\n    setHeader(props.header);\n    setMDate(props.mdate);\n    setNanoId(props.nanoid);\n    setQuestions(props.questions);\n    setResponses(props.responses);\n    setQuestionId(props.questionId);\n    setReadOnly(props.readOnly);\n  }, [props]);\n  useEffect(() => {\n    getQuestionsAPIMethod().then(questions => {\n      setQuestions(questions);\n    });\n    getResponsesAPIMethod().then(responses => {\n      setResponses(responses);\n    });\n  }, []);\n  useEffect(() => {//console.log(\"curr\");\n    //console.log(currResponse);\n  }, [currResponse]);\n  useEffect(() => {\n    //console.log(responses.length !== 0 && responses[0].question === questionId);\n    //console.log(responses.length !== 0 ? responses[0].date : 0);\n    //console.log(props.date);\n    let res = responses.filter(res => res.question === questionId && (res.date === date || res.date.toString().split('T')[0] === props.date.toISOString().split('T')[0]));\n    setCurrResponse(res);\n  }, [responses, props.date]);\n\n  const updateQuestions = (newValue, field) => {\n    let newQuestions = [];\n    let flag = true;\n\n    for (let i = 0; i < questions.length; i++) {\n      console.log(questions[i].nanoid);\n\n      if (questions[i].nanoid === nanoId) {\n        flag = false;\n        let newQuestion = {\n          type: field === 'type' ? newValue : type,\n          header: field === 'header' ? newValue : header,\n          choices: field === 'multiple_choice' ? newValue : choices,\n          mdate: mdate,\n          nanoid: nanoId,\n          status: questions[i].status\n        };\n        console.log(newQuestion);\n        newQuestions.push(newQuestion);\n      } else {\n        newQuestions.push(questions[i]);\n      }\n    }\n\n    if (flag) {\n      let id = nanoid();\n      let newQuestion = {\n        type: field === 'type' ? newValue : type,\n        header: field === 'header' ? newValue : header,\n        choices: field === 'multiple_choice' ? newValue : choices,\n        mdate: new Date(),\n        nanoid: id,\n        status: 'ADDED'\n      };\n      newQuestions.push(newQuestion);\n    }\n\n    props.setQuestions(newQuestions);\n    console.log(newQuestions); //console.log(\"updated@\");\n  };\n\n  const updateChoice = (e, index) => {\n    let newChoices = [];\n\n    for (let i = 0; i < 3; i++) {\n      if (index == i) {\n        newChoices[i] = e.target.value;\n      } else {\n        newChoices.push(choices[i]);\n      }\n    }\n\n    updateQuestions(newChoices, 'multiple_choice');\n  };\n\n  const updateResponse = (res, type, index) => {\n    let newChoiceList = [];\n\n    if (type === 'MultipleChoice') {\n      for (let i = 0; i < choices.length; i++) {\n        if (index === i) {\n          newChoiceList.push(true);\n        } else {\n          newChoiceList.push(false);\n        }\n      }\n    }\n\n    let oldResponse = currResponse[0];\n    let id = nanoid();\n    let newResponse = {\n      _id: oldResponse !== undefined ? oldResponse._id : null,\n      response: {\n        text: type === 'Text' ? res += \"\" : '',\n        number: type === 'Number' ? res *= 1 : null,\n        boolean: type === 'Boolean' ? JSON.parse(res) : null,\n        multiple_choice: type === 'MultipleChoice' ? newChoiceList : []\n      },\n      date: date,\n      nanoid: id,\n      question: questionId,\n      status: ''\n    };\n    let newResponses = [];\n\n    if (oldResponse === undefined) {\n      // If there is no response, create a new one\n      console.log(\"res added\");\n      newResponse.status = 'ADDED';\n\n      for (let i = 0; i < responses.length; i++) {\n        newResponses.push(responses[i]);\n      }\n\n      newResponses.push(newResponse);\n      props.setResponses(newResponses);\n    } else {\n      // If there is a response, update it\n      console.log(\"res NOT added but updated\");\n      newResponse.status = 'UPDATED';\n\n      for (let i = 0; i < responses.length; i++) {\n        if (responses[i].question === oldResponse.question) {\n          newResponses.push(newResponse);\n        } else {\n          newResponses.push(responses[i]);\n        }\n      } //console.log(\"@@@newResponses\");\n      //console.log(newResponses);\n\n\n      props.setResponses(newResponses);\n    }\n\n    console.log(newResponses);\n  };\n\n  return readOnly ?\n  /*#__PURE__*/\n  //Read-only mode (view data)\n  _jsxDEV(\"div\", {\n    className: \"Question\",\n    style: {\n      marginBottom: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        margin: 0\n      },\n      children: header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }, this), type == \"Text\" ?\n    /*#__PURE__*/\n    //Text type\n    _jsxDEV(\"div\", {\n      className: \"question-response\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"answer\",\n        value: currResponse !== undefined && currResponse.length !== 0 ? currResponse[0].response.text : '',\n        placeholder: \"Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }, this) : type == \"Number\" ?\n    /*#__PURE__*/\n    //Number type\n    _jsxDEV(\"div\", {\n      className: \"question-response\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          width: '150px'\n        },\n        type: \"number\",\n        name: \"answer\",\n        value: currResponse !== undefined && currResponse.length !== 0 ? currResponse[0].response.number : '',\n        placeholder: \"Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 29\n    }, this) : type == \"Boolean\" ?\n    /*#__PURE__*/\n    //Boolean type\n    _jsxDEV(\"div\", {\n      className: \"question-response\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radio-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: nanoId,\n            value: \"true\",\n            checked: currResponse !== undefined && currResponse.length !== 0 && currResponse[0].response.boolean ? currResponse[0].response.boolean : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 48\n          }, this), \"true\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: nanoId,\n            value: \"false\",\n            checked: currResponse !== undefined && currResponse.length !== 0 && !currResponse[0].response.boolean ? !currResponse[0].response.boolean : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 48\n          }, this), \"false\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 33\n    }, this) : type == \"MultipleChoice\" ?\n    /*#__PURE__*/\n    //MultipleChoice type\n    _jsxDEV(\"div\", {\n      className: \"radio-wrapper2\",\n      children: choices.map((choice, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radio-wrapper3\",\n        style: {\n          display: 'flex',\n          marginTop: '10px',\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            margin: \"0\",\n            padding: '0'\n          },\n          type: \"radio\",\n          name: nanoId,\n          value: \"true\",\n          checked: currResponse !== undefined && currResponse.length !== 0 && currResponse[0].response.multiple_choice ? currResponse[0].response.multiple_choice[i] : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 53\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: \"0\",\n            paddingLeft: '10px'\n          },\n          children: choice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 53\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 49\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 37\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 13\n  }, this) : editMode ?\n  /*#__PURE__*/\n  //Edit mode\n  _jsxDEV(\"div\", {\n    className: \"Question\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-header\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        // question header\n        type: \"text\",\n        style: {\n          height: \"30px\"\n        },\n        name: \"header\",\n        value: header,\n        placeholder: \"Header\",\n        onChange: e => {\n          setHeader(e.target.value);\n          updateQuestions(e.target.value, 'header');\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selectAndDelete\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        // dropdown question type selection menu\n        value: type,\n        style: {\n          height: \"30px\"\n        },\n        onChange: e => {\n          setType(e.target.value);\n          updateQuestions(e.target.value, 'type');\n        },\n        className: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Text\",\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Number\",\n          children: \"Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Boolean\",\n          children: \"Boolean\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"MultipleChoice\",\n          children: \"Multiple Choice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.deleteQuestion(nanoId),\n        style: {\n          background: \"transparent\",\n          border: \"none\",\n          padding: \"0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-icons\",\n          children: \"delete_outline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 21\n    }, this), type === 'MultipleChoice' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"radio-wrapper1\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"radio\",\n          value: \"true\",\n          checked: false,\n          style: {\n            margin: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"radio-input\",\n          style: {\n            borderRight: 'none',\n            borderLeft: 'none',\n            borderTop: 'none',\n            borderRadius: 0\n          },\n          type: \"text\",\n          name: \"text\",\n          value: choices[0],\n          placeholder: \"new choice\",\n          onChange: e => updateChoice(e, 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"radio\",\n          value: \"true\",\n          checked: false,\n          style: {\n            margin: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"radio-input\",\n          style: {\n            borderRight: 'none',\n            borderLeft: 'none',\n            borderTop: 'none',\n            borderRadius: 0\n          },\n          type: \"text\",\n          name: \"text\",\n          value: choices[1],\n          placeholder: \"new choice\",\n          onChange: e => updateChoice(e, 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"radio\",\n          value: \"true\",\n          checked: false,\n          style: {\n            margin: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"radio-input\",\n          style: {\n            borderRight: 'none',\n            borderLeft: 'none',\n            borderTop: 'none',\n            borderRadius: 0\n          },\n          type: \"text\",\n          name: \"text\",\n          value: choices[2],\n          placeholder: \"new choice\",\n          onChange: e => updateChoice(e, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 29\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 17\n  }, this) :\n  /*#__PURE__*/\n  // Answer mode\n  _jsxDEV(\"div\", {\n    className: \"Question\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        margin: 0\n      },\n      children: header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 21\n    }, this), type == \"Text\" ?\n    /*#__PURE__*/\n    //Text type\n    _jsxDEV(\"div\", {\n      className: \"question-response\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"answer\",\n        value: currResponse !== undefined && currResponse.length !== 0 ? currResponse[0].response.text : '',\n        placeholder: \"Response\",\n        onChange: e => updateResponse(e.target.value, 'Text')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 29\n    }, this) : type == \"Number\" ?\n    /*#__PURE__*/\n    //Number type\n    _jsxDEV(\"div\", {\n      className: \"question-response\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          width: '150px'\n        },\n        type: \"number\",\n        name: \"answer\",\n        value: currResponse !== undefined && currResponse.length !== 0 ? currResponse[0].response.number : '',\n        placeholder: \"Response\",\n        onChange: e => updateResponse(e.target.value, 'Number')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 33\n    }, this) : type == \"Boolean\" ?\n    /*#__PURE__*/\n    //Boolean type\n    _jsxDEV(\"div\", {\n      className: \"question-response\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radio-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: nanoId,\n            value: \"true\",\n            checked: currResponse !== undefined && currResponse.length !== 0 && currResponse[0].response.boolean ? currResponse[0].response.boolean : null,\n            onChange: e => updateResponse(e.target.value, 'Boolean')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 52\n          }, this), \"true\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: nanoId,\n            value: \"false\",\n            checked: currResponse !== undefined && currResponse.length !== 0 && !currResponse[0].response.boolean ? !currResponse[0].response.boolean : null,\n            onChange: e => updateResponse(e.target.value, 'Boolean')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 52\n          }, this), \"false\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 37\n    }, this) : type == \"MultipleChoice\" ?\n    /*#__PURE__*/\n    //MultipleChoice type\n    _jsxDEV(\"div\", {\n      className: \"radio-wrapper2\",\n      children: choices.map((choice, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radio-wrapper3\",\n        style: {\n          display: 'flex',\n          marginTop: '10px',\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            margin: \"0\",\n            padding: '0'\n          },\n          type: \"radio\",\n          name: nanoId,\n          value: \"true\",\n          checked: currResponse !== undefined && currResponse.length !== 0 && currResponse[0].response.multiple_choice ? currResponse[0].response.multiple_choice[i] : null,\n          onChange: e => updateResponse(e.target.value, 'MultipleChoice', i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 57\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: \"0\",\n            paddingLeft: '10px'\n          },\n          children: choice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 57\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 53\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 41\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 17\n  }, this);\n}\n\n_s(Question, \"D/myPaqwmtPIXVooFEUt4QPp3LY=\");\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/Question.js"],"names":["React","useState","useEffect","nanoid","getQuestionsAPIMethod","getResponsesAPIMethod","Question","props","readOnly","setReadOnly","editMode","setEditMode","type","setType","header","setHeader","choices","setChoices","mdate","setMDate","nanoId","setNanoId","questions","setQuestions","responses","setResponses","currResponse","setCurrResponse","questionId","setQuestionId","date","setDate","tempResList","setTempResList","then","res","filter","question","toString","split","toISOString","updateQuestions","newValue","field","newQuestions","flag","i","length","console","log","newQuestion","status","push","id","Date","updateChoice","e","index","newChoices","target","value","updateResponse","newChoiceList","oldResponse","newResponse","_id","undefined","response","text","number","boolean","JSON","parse","multiple_choice","newResponses","marginBottom","margin","width","map","choice","display","marginTop","padding","paddingLeft","height","deleteQuestion","background","border","borderRight","borderLeft","borderTop","borderRadius"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {nanoid} from 'nanoid';\nimport {getQuestionsAPIMethod, getResponsesAPIMethod} from \"../api/client\";\n\nfunction Question(props) {\n    const [readOnly, setReadOnly] = useState(false);\n    const [editMode, setEditMode] = useState(props.editMode);\n    const [type, setType] = useState(props.type);\n    const [header, setHeader] = useState(props.header);\n    const [choices, setChoices] = useState(props.choices);\n    const [mdate, setMDate] = useState(props.mdate);\n    const [nanoId, setNanoId] = useState(props.nanoid);\n    const [questions, setQuestions] = useState(props.questions);\n    const [responses, setResponses] = useState(props.responses);\n    const [currResponse, setCurrResponse] = useState();\n    const [questionId, setQuestionId] = useState(props.questionId);\n    const [date, setDate] = useState(props.date);\n    const [tempResList, setTempResList] = useState([]);\n\n    useEffect(() => {\n        setDate(props.date);\n        setEditMode(props.editMode);\n        setType(props.type);\n        setChoices(props.choices);\n        setHeader(props.header);\n        setMDate(props.mdate);\n        setNanoId(props.nanoid);\n        setQuestions(props.questions);\n        setResponses(props.responses);\n        setQuestionId(props.questionId);\n        setReadOnly(props.readOnly);\n    }, [props]);\n\n    useEffect(() => {\n        getQuestionsAPIMethod().then((questions) => {\n            setQuestions(questions);\n        });\n        getResponsesAPIMethod().then((responses) => {\n            setResponses(responses);\n        });\n    }, []);\n\n    useEffect(() => {\n        //console.log(\"curr\");\n        //console.log(currResponse);\n    }, [currResponse]);\n\n    useEffect(() => {\n        //console.log(responses.length !== 0 && responses[0].question === questionId);\n        //console.log(responses.length !== 0 ? responses[0].date : 0);\n        //console.log(props.date);\n        let res = responses.filter((res) =>\n            res.question === questionId &&\n            (\n                res.date === date\n                ||\n                res.date.toString().split('T')[0] === props.date.toISOString().split('T')[0]\n            )\n        )\n        setCurrResponse(res);\n    }, [responses, props.date]);\n\n    const updateQuestions = (newValue, field) => {\n        let newQuestions = [];\n        let flag = true;\n        for (let i = 0; i < questions.length; i++) {\n            console.log(questions[i].nanoid);\n            if (questions[i].nanoid === nanoId) {\n                flag = false;\n                let newQuestion = {\n                    type: field === 'type' ? newValue : type,\n                    header: field === 'header' ? newValue : header,\n                    choices: field === 'multiple_choice' ? newValue : choices,\n                    mdate: mdate,\n                    nanoid: nanoId,\n                    status: questions[i].status\n                }\n                console.log(newQuestion);\n                newQuestions.push(newQuestion);\n            }\n            else {\n                newQuestions.push(questions[i]);\n            }\n        }\n        if (flag) {\n            let id = nanoid()\n            let newQuestion = {\n                type: field === 'type' ? newValue : type,\n                header: field === 'header' ? newValue : header,\n                choices: field === 'multiple_choice' ? newValue : choices,\n                mdate: new Date(),\n                nanoid: id,\n                status: 'ADDED'\n            }\n            newQuestions.push(newQuestion);\n        }\n        props.setQuestions(newQuestions);\n        console.log(newQuestions);\n        //console.log(\"updated@\");\n    }\n\n    const updateChoice = (e, index) => {\n        let newChoices = [];\n        for (let i = 0; i < 3; i++) {\n            if (index == i) {\n                newChoices[i] = e.target.value;\n            }\n            else {\n                newChoices.push(choices[i]);\n            }\n        }\n        updateQuestions(newChoices, 'multiple_choice');\n    }\n\n    const updateResponse = (res, type, index) => {\n        let newChoiceList = [];\n        if (type === 'MultipleChoice') {\n            for (let i = 0; i < choices.length; i++) {\n                if (index === i) {\n                    newChoiceList.push(true);\n                }\n                else {\n                    newChoiceList.push(false);\n                }\n            }\n        }\n\n        let oldResponse = currResponse[0];\n        let id = nanoid();\n        let newResponse = {\n            _id: oldResponse !== undefined ? oldResponse._id : null,\n            response: {\n                text: type === 'Text' ? res+=\"\" : '',\n                number: type === 'Number' ? res*=1 : null,\n                boolean: type === 'Boolean' ? JSON.parse(res) : null,\n                multiple_choice: type === 'MultipleChoice' ? newChoiceList : []\n            },\n            date: date,\n            nanoid: id,\n            question: questionId,\n            status: ''\n        }\n        let newResponses = [];\n        if (oldResponse === undefined) { // If there is no response, create a new one\n            console.log(\"res added\");\n            newResponse.status = 'ADDED';\n            for (let i = 0; i < responses.length; i++) {\n                newResponses.push(responses[i]);\n            }\n            newResponses.push(newResponse);\n            props.setResponses(newResponses);\n        }\n        else { // If there is a response, update it\n            console.log(\"res NOT added but updated\");\n            newResponse.status = 'UPDATED';\n            for (let i = 0; i < responses.length; i++) {\n                if (responses[i].question === oldResponse.question) {\n                    newResponses.push(newResponse);\n                }\n                else {\n                    newResponses.push(responses[i]);\n                }\n            }\n            //console.log(\"@@@newResponses\");\n            //console.log(newResponses);\n            props.setResponses(newResponses);\n        }\n        console.log(newResponses);\n    }\n\n    return (\n        readOnly ?\n            //Read-only mode (view data)\n            <div className=\"Question\" style={{marginBottom:\"50px\"}}>\n                <h3 style={{margin:0}}>{header}</h3>\n                {\n                    type == \"Text\" ?\n                        //Text type\n                        <div className=\"question-response\">\n                            <input\n                                type=\"text\"\n                                name=\"answer\"\n                                value={currResponse !== undefined && currResponse.length !== 0 ? currResponse[0].response.text : ''}\n                                placeholder={\"Response\"}\n                            />\n                        </div>\n                        :\n                        type == \"Number\" ?\n                            //Number type\n                            <div className=\"question-response\">\n                                <input\n                                    style={{width: '150px'}}\n                                    type=\"number\"\n                                    name=\"answer\"\n                                    value={currResponse !== undefined && currResponse.length !== 0 ? currResponse[0].response.number : ''}\n                                    placeholder={\"Response\"}\n                                />\n                            </div>\n                            :\n                            type == \"Boolean\" ?\n                                //Boolean type\n                                <div className=\"question-response\">\n                                    <div className=\"radio-wrapper\">\n                                        <label><input\n                                            type=\"radio\"\n                                            name={nanoId}\n                                            value=\"true\"\n                                            checked={currResponse !== undefined && currResponse.length !== 0 && currResponse[0].response.boolean ? currResponse[0].response.boolean : null}\n                                        />true</label>\n                                        <label><input\n                                            type=\"radio\"\n                                            name={nanoId}\n                                            value=\"false\"\n                                            checked={currResponse !== undefined && currResponse.length !== 0 && !currResponse[0].response.boolean ? !currResponse[0].response.boolean : null}\n                                        />false</label>\n                                    </div>\n                                </div>\n                                :\n                                type == \"MultipleChoice\" ?\n                                    //MultipleChoice type\n                                    <div className=\"radio-wrapper2\">\n                                        {\n                                            choices.map((choice, i) =>\n                                                <div className=\"radio-wrapper3\" style={{display: 'flex', marginTop: '10px', marginBottom: '10px'}}>\n                                                    <input\n                                                        style={{margin: \"0\", padding: '0'}}\n                                                        type=\"radio\"\n                                                        name={nanoId}\n                                                        value=\"true\"\n                                                        checked={currResponse !== undefined && currResponse.length !== 0 && currResponse[0].response.multiple_choice ? currResponse[0].response.multiple_choice[i] : null}\n                                                    />\n                                                    <p style={{margin: \"0\", paddingLeft: '10px'}}>{choice}</p>\n                                                </div>\n                                            )\n                                        }\n                                    </div>\n                                    :\n                                    null\n                }\n            </div>\n            :\n            editMode ?\n                //Edit mode\n                <div className=\"Question\">\n                    <div className=\"question-header\">\n                        <input // question header\n                            type=\"text\"\n                            style={{height: \"30px\"}}\n                            name=\"header\"\n                            value={header}\n                            placeholder={\"Header\"}\n                            onChange={(e) => {setHeader(e.target.value);updateQuestions(e.target.value, 'header');}}/>\n                    </div>\n                    <div className=\"selectAndDelete\" >\n                        <select // dropdown question type selection menu\n                            value={type}\n                            style={{height: \"30px\"}}\n                            onChange={(e) => {setType(e.target.value);updateQuestions(e.target.value, 'type');}}\n                            className=\"dropdown\">\n                            <option value=\"Text\">Text</option>\n                            <option value=\"Number\">Number</option>\n                            <option value=\"Boolean\">Boolean</option>\n                            <option value=\"MultipleChoice\">Multiple Choice</option>\n                        </select>\n                        <button onClick={() => props.deleteQuestion(nanoId)} style={{background: \"transparent\", border: \"none\", padding: \"0px\"}}>\n                            <span  className=\"material-icons\">delete_outline</span>\n                        </button>\n                    </div>\n\n                    {\n                        type === 'MultipleChoice' ?\n                            <div className=\"radio-wrapper1\">\n                                <label>\n                                    <input type=\"radio\" name=\"radio\" value=\"true\" checked={false} style={{margin:0}}/>\n                                    <input className=\"radio-input\" style={{borderRight: 'none', borderLeft: 'none', borderTop: 'none', borderRadius: 0}} type=\"text\" name=\"text\" value={choices[0]} placeholder=\"new choice\" onChange={(e) => updateChoice(e, 0)}/>\n                                </label>\n                                <label>\n                                    <input type=\"radio\" name=\"radio\" value=\"true\" checked={false} style={{margin:0}}/>\n                                    <input className=\"radio-input\" style={{borderRight: 'none', borderLeft: 'none', borderTop: 'none', borderRadius: 0}} type=\"text\" name=\"text\" value={choices[1]} placeholder=\"new choice\" onChange={(e) => updateChoice(e, 1)}/>\n                                </label>\n                                <label>\n                                    <input type=\"radio\" name=\"radio\" value=\"true\" checked={false} style={{margin:0}}/>\n                                    <input className=\"radio-input\" style={{borderRight: 'none', borderLeft: 'none', borderTop: 'none', borderRadius: 0}} type=\"text\" name=\"text\" value={choices[2]} placeholder=\"new choice\" onChange={(e) => updateChoice(e, 2)}/>\n                                </label>\n                            </div>\n                            :\n                            null\n                    }\n\n                </div>\n                :\n                // Answer mode\n                <div className=\"Question\">\n                    <h3 style={{margin:0}}>{header}</h3>\n                    {\n                        type == \"Text\" ?\n                            //Text type\n                            <div className=\"question-response\">\n                                <input\n                                    type=\"text\"\n                                    name=\"answer\"\n                                    value={currResponse !== undefined && currResponse.length !== 0 ? currResponse[0].response.text : ''}\n                                    placeholder={\"Response\"}\n                                    onChange={(e) => updateResponse(e.target.value, 'Text')}\n                                />\n                            </div>\n                            :\n                            type == \"Number\" ?\n                                //Number type\n                                <div className=\"question-response\">\n                                    <input\n                                        style={{width: '150px'}}\n                                        type=\"number\"\n                                        name=\"answer\"\n                                        value={currResponse !== undefined && currResponse.length !== 0 ? currResponse[0].response.number : ''}\n                                        placeholder={\"Response\"}\n                                        onChange={(e) => updateResponse(e.target.value, 'Number')}\n                                    />\n                                </div>\n                                :\n                                type == \"Boolean\" ?\n                                    //Boolean type\n                                    <div className=\"question-response\">\n                                        <div className=\"radio-wrapper\">\n                                            <label><input\n                                                type=\"radio\"\n                                                name={nanoId}\n                                                value=\"true\"\n                                                checked={currResponse !== undefined && currResponse.length !== 0 && currResponse[0].response.boolean ? currResponse[0].response.boolean : null}\n                                                onChange={(e) => updateResponse(e.target.value, 'Boolean')}\n                                            />true</label>\n                                            <label><input\n                                                type=\"radio\"\n                                                name={nanoId}\n                                                value=\"false\"\n                                                checked={currResponse !== undefined && currResponse.length !== 0 && !currResponse[0].response.boolean ? !currResponse[0].response.boolean : null}\n                                                onChange={(e) => updateResponse(e.target.value, 'Boolean')}\n                                            />false</label>\n                                        </div>\n                                    </div>\n                                    :\n                                    type == \"MultipleChoice\" ?\n                                        //MultipleChoice type\n                                        <div className=\"radio-wrapper2\">\n                                            {\n                                                choices.map((choice, i) =>\n                                                    <div className=\"radio-wrapper3\" style={{display: 'flex', marginTop: '10px', marginBottom: '10px'}}>\n                                                        <input\n                                                            style={{margin: \"0\", padding: '0'}}\n                                                            type=\"radio\"\n                                                            name={nanoId}\n                                                            value=\"true\"\n                                                            checked={currResponse !== undefined && currResponse.length !== 0 && currResponse[0].response.multiple_choice ? currResponse[0].response.multiple_choice[i] : null}\n                                                            onChange={(e) => updateResponse(e.target.value, 'MultipleChoice', i)}\n                                                        />\n                                                        <p style={{margin: \"0\", paddingLeft: '10px'}}>{choice}</p>\n                                                    </div>\n                                                )\n                                            }\n                                        </div>\n                                        :\n                                        null\n                    }\n                </div>\n    );\n}\nexport default Question"]},"metadata":{},"sourceType":"module"}