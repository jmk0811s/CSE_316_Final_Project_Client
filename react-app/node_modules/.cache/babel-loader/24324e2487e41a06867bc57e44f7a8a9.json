{"ast":null,"code":"var _jsxFileName = \"/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/Question.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Question(props) {\n  _s();\n\n  const [questionDate, setQuestionDate] = useState(props.qDate);\n  const [questionText, setQuestionText] = useState(props.qText);\n  const [questionType, setQuestionType] = useState(props.qType);\n  const [editMode, setEditMode] = useState(true);\n  const [multipleChoices, setMultipleChoices] = useState([{\n    choices: \"Ok day\"\n  }, {\n    choices: \"Bad day\"\n  }, {\n    choices: \"Great day\"\n  }]);\n\n  const handleSelect = prop => e => {\n    if (prop == \"qType\") {\n      setQuestionType(e.target.value);\n    } else if (prop == \"qText\") {\n      setQuestionText(e.target.value);\n    }\n  };\n\n  return editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Question\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: questionText,\n        onChange: handleSelect(\"qText\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleSelect(\"qType\"),\n        value: questionType,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"boolean\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3\",\n          children: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"4\",\n          children: \"multiple choice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"trash\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Question\",\n    children: [questionText, questionType == '1' ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 40\n    }, this) : questionType == '2' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"(\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"true\",\n        name: \"tfRadio\",\n        value: true,\n        children: \"True\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 30\n      }, this), \") (\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"false\",\n        name: \"tfRadio\",\n        value: false,\n        children: \"False\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 30\n      }, this), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 26\n    }, this) : questionType == '3' ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 47\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: multipleChoices ? multipleChoices.map(choice => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"multipleChoices\",\n        name: \"mcRadio\",\n        children: choice.choices\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 38\n      }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 14\n  }, this);\n}\n\n_s(Question, \"1kWLNSOMkjHHBjN32NnuW0vu3jc=\");\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/Question.js"],"names":["React","useState","Question","props","questionDate","setQuestionDate","qDate","questionText","setQuestionText","qText","questionType","setQuestionType","qType","editMode","setEditMode","multipleChoices","setMultipleChoices","choices","handleSelect","prop","e","target","value","display","justifyContent","map","choice"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\n\nfunction Question(props){\n\n    const [questionDate, setQuestionDate] =useState(props.qDate);\n    const [questionText, setQuestionText] =useState(props.qText);\n    const [questionType, setQuestionType] =useState(props.qType);\n    const [editMode, setEditMode] = useState(true);\n    const [multipleChoices, setMultipleChoices] = useState(\n        [{choices: \"Ok day\"},{choices: \"Bad day\"}, {choices: \"Great day\"}]);\n\n    const handleSelect = (prop)=> (e) => {\n        if(prop == \"qType\"){\n            setQuestionType(e.target.value)\n        }\n        else if(prop == \"qText\"){\n            setQuestionText(e.target.value)\n        }\n\n    }\n\n    return(editMode?\n            <div className=\"Question\">\n                <form>\n                    <input type=\"text\"\n                           value={questionText}\n                           onChange={handleSelect(\"qText\")}></input>\n                </form>\n                <div style={{display: \"flex\",justifyContent: \"space-between\"}}>\n                    <select onChange={handleSelect(\"qType\")} value={questionType}>\n                        <option value=\"1\">number</option>\n                        <option value=\"2\">boolean</option>\n                        <option value=\"3\">text</option>\n                        <option value=\"4\">multiple choice</option>\n                    </select>\n                    <button>trash</button>\n                </div>\n            </div>:\n            (<div className=\"Question\">\n                {questionText}\n                {questionType == '1'? (<input type ='text'></input>) :\n                    questionType == '2'?\n                        (<div>\n                            (<input type=\"radio\" id=\"true\"\n                                    name=\"tfRadio\" value={true}>True</input>)\n                            (<input type=\"radio\" id=\"false\"\n                                    name=\"tfRadio\" value={false}>False</input>)\n                        </div>) :\n                        questionType == '3'? (<input type = 'text'></input>) :\n                            (<div>\n                                {multipleChoices? multipleChoices.map((choice)=>\n                                    (<input type=\"radio\" id=\"multipleChoices\"\n                                    name=\"mcRadio\">{choice.choices}</input>)\n                                ):<></>}\n                            </div>)\n                }\n            </div>)\n\n    );\n}\nexport default Question"]},"metadata":{},"sourceType":"module"}