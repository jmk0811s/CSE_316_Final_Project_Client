{"ast":null,"code":"var _jsxFileName = \"/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/ViewByQuestion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ViewByQuestion(props) {\n  _s();\n\n  const [responses, setResponses] = useState(props.responses);\n  const [questions, setQuestions] = useState(props.questions);\n  const [textQuestions, setTextQuestions] = useState();\n  const [textQuestionsIndex, setTextQuestionsIndex] = useState(0);\n  useEffect(() => {\n    setQuestions(props.questions);\n    setResponses(props.responses); // if(props.responses){\n    //     setResponses(sortByDate(props.responses))\n    // }\n\n    if (props.responses) {\n      setTextQuestions(filterOnlyTextQ(props.responses));\n    }\n  }, [props.responses, props.questions]); //최신날짜 = 0번째\n\n  const sortByDate = list => {\n    return list.sort((a, b) => new Date(b.date) - new Date(a.date));\n  };\n\n  const filterOnlyTextQ = list => {\n    return list.filter(r => r.response.text !== \"\");\n  }; // let sortedList;\n  //---------------for testing---------------------\n  // if(responses){\n  //     let sortedList = sortByDate(responses);\n  //     console.log(sortedList)\n  //     console.log(sortedList[textQuestionsIndex].date)\n  // }\n\n\n  const dateToString = date => {\n    return date.getFullYear() + \" / \" + (date.getMonth() + 1) + \" / \" + date.getDate();\n  };\n\n  console.log(responses);\n  console.log(textQuestions);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"View by Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LogSelectionBar\",\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: responses ? responses[textQuestionsIndex].date : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ViewByQuestion, \"JgQQwn3/qphpWOKjZCuZvWYSU2g=\");\n\n_c = ViewByQuestion;\nexport default ViewByQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewByQuestion\");","map":{"version":3,"sources":["/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/ViewByQuestion.js"],"names":["React","useState","useEffect","ViewByQuestion","props","responses","setResponses","questions","setQuestions","textQuestions","setTextQuestions","textQuestionsIndex","setTextQuestionsIndex","filterOnlyTextQ","sortByDate","list","sort","a","b","Date","date","filter","r","response","text","dateToString","getFullYear","getMonth","getDate","console","log","display","justifyContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AACA,SAASC,cAAT,CAAwBC,KAAxB,EAA8B;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAACG,KAAK,CAACC,SAAP,CAA1C;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAACG,KAAK,CAACG,SAAP,CAA1C;AACA,QAAM,CAACE,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,EAAlD;AACA,QAAM,CAACU,kBAAD,EAAqBC,qBAArB,IAA8CX,QAAQ,CAAC,CAAD,CAA5D;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACVM,IAAAA,YAAY,CAACJ,KAAK,CAACG,SAAP,CAAZ;AACAD,IAAAA,YAAY,CAACF,KAAK,CAACC,SAAP,CAAZ,CAFU,CAGV;AACA;AACA;;AACA,QAAGD,KAAK,CAACC,SAAT,EAAmB;AACfK,MAAAA,gBAAgB,CAACG,eAAe,CAACT,KAAK,CAACC,SAAP,CAAhB,CAAhB;AACH;AACJ,GATQ,EASP,CAACD,KAAK,CAACC,SAAP,EAAkBD,KAAK,CAACG,SAAxB,CATO,CAAT,CAN0B,CAiB1B;;AACA,QAAMO,UAAU,GAAIC,IAAD,IAAU;AACzB,WAAOA,IAAI,CAACC,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAU,IAAIC,IAAJ,CAASD,CAAC,CAACE,IAAX,IAAmB,IAAID,IAAJ,CAASF,CAAC,CAACG,IAAX,CAAvC,CAAP;AACH,GAFD;;AAIA,QAAMP,eAAe,GAAIE,IAAD,IAAU;AAC9B,WAAOA,IAAI,CAACM,MAAL,CAAYC,CAAC,IAAGA,CAAC,CAACC,QAAF,CAAWC,IAAX,KAAoB,EAApC,CAAP;AACH,GAFD,CAtB0B,CA0B1B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMC,YAAY,GAAIL,IAAD,IAAU;AAC3B,WAAOA,IAAI,CAACM,WAAL,KAAqB,KAArB,IAA8BN,IAAI,CAACO,QAAL,KAAkB,CAAhD,IAAqD,KAArD,GAA6DP,IAAI,CAACQ,OAAL,EAApE;AACH,GAFD;;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYzB,SAAZ;AACAwB,EAAAA,OAAO,CAACC,GAAR,CAAYrB,aAAZ;AAMA,sBACE;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,KAAK,EAAE;AAACsB,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,cAAc,EAAE;AAAlC,OAAxC;AAAA,8BACI;AAAA,+BAGI;AAAA,oBAAK;AAAL;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA,kBACK3B,SAAS,GAAEA,SAAS,CAACM,kBAAD,CAAT,CAA8BS,IAAhC,GAAuC;AADrD;AAAA;AAAA;AAAA;AAAA,cANJ,eASI;AAAA,+BAGI;AAAA,oBAAK;AAAL;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBH;;GAnEQjB,c;;KAAAA,c;AAoET,eAAeA,cAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nfunction ViewByQuestion(props){\n    const [responses, setResponses] = useState(props.responses);\n    const [questions, setQuestions] = useState(props.questions);\n    const [textQuestions, setTextQuestions] = useState();\n    const [textQuestionsIndex, setTextQuestionsIndex] = useState(0);\n\n    useEffect(()=>{\n        setQuestions(props.questions);\n        setResponses(props.responses);\n        // if(props.responses){\n        //     setResponses(sortByDate(props.responses))\n        // }\n        if(props.responses){\n            setTextQuestions(filterOnlyTextQ(props.responses))\n        }\n    },[props.responses, props.questions])\n\n    //최신날짜 = 0번째\n    const sortByDate = (list) => {\n        return list.sort((a, b) => new Date(b.date) - new Date(a.date));\n    }\n\n    const filterOnlyTextQ = (list) => {\n        return list.filter(r=> r.response.text !== \"\");\n    }\n\n    // let sortedList;\n    //---------------for testing---------------------\n    // if(responses){\n    //     let sortedList = sortByDate(responses);\n    //     console.log(sortedList)\n    //     console.log(sortedList[textQuestionsIndex].date)\n    // }\n\n    const dateToString = (date) => {\n        return date.getFullYear() + \" / \" + (date.getMonth() + 1) + \" / \" + date.getDate();\n    }\n    console.log(responses)\n    console.log(textQuestions)\n\n\n\n\n\n    return (\n      <div>\n          <h1>View by Question</h1>\n\n          {/*text questions*/}\n          <div className=\"LogSelectionBar\" style={{display: \"flex\", justifyContent: \"space-between\"}}>\n              <button\n                  // onClick={prev}\n              >\n                  <h2>{\"<\"}</h2>\n              </button>\n              <h2>\n                  {responses? responses[textQuestionsIndex].date : \"\"}\n              </h2>\n              <button\n                  // onClick={next}\n              >\n                  <h2>{\">\"}</h2>\n              </button>\n          </div>\n\n      </div>\n    );\n}\nexport default ViewByQuestion"]},"metadata":{},"sourceType":"module"}