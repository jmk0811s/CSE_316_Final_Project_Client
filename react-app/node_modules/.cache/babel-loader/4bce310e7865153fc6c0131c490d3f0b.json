{"ast":null,"code":"var _jsxFileName = \"/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/ViewByQuestion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CartesianGrid, Line, BarChart, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis, Legend, Bar } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ViewByQuestion(props) {\n  _s();\n\n  const [responses, setResponses] = useState(props.responses);\n  const [questions, setQuestions] = useState(props.questions);\n  const [textQuestion, setTextQuestion] = useState();\n  const [textResponses, setTextResponses] = useState();\n  const [textResponsesIndex, setTextResponsesIndex] = useState(0); //newly added\n\n  const [textQuestionIndex, setTextQuestionIndex] = useState(0);\n  const [currTextResponses, setCurrTextResponses] = useState();\n  const [numberQuestion, setNumberQuestion] = useState();\n  const [numberResponses, setNumberResponses] = useState(); //newly added\n\n  const [numberQuestionIndex, setNumberQuestionIndex] = useState(0);\n  const [currNumberResponses, setCurrNumberResponses] = useState();\n  const [booleanQuestion, setBooleanQuestion] = useState();\n  const [booleanResponses, setBooleanResponses] = useState();\n  const [booleanQuestionIndex, setBooleanQuestionIndex] = useState();\n  const [currBooleanResponses, setCurrBooleanResponses] = useState();\n  useEffect(() => {\n    setQuestions(props.questions);\n    setResponses(props.responses);\n\n    if (props.questions) {\n      setTextQuestion(filterOnly(props.questions, \"textQuestion\"));\n      setNumberQuestion(filterOnly(props.questions, \"numberQuestion\"));\n      setBooleanQuestion(filterOnly(props.questions, \"booleanQuestion\"));\n    }\n\n    if (props.responses) {\n      setTextResponses(sortByDate(filterOnly(props.responses, \"textResponse\")));\n      setNumberResponses(sortByDate2(filterOnly(props.responses, \"numberResponse\")));\n      setBooleanResponses(sortByDate2(filterOnly(props.responses, \"booleanResponse\")));\n    }\n  }, [props.responses, props.questions]);\n  useEffect(() => {\n    if (textQuestion) {\n      if (textQuestion[textQuestionIndex] && textResponses) {\n        setCurrTextResponses(filterById(textResponses, textQuestion[textQuestionIndex]._id));\n      }\n    }\n  }, [textResponses, textQuestion]);\n  useEffect(() => {\n    if (numberQuestion) {\n      if (numberQuestion[numberQuestionIndex] && numberResponses) {\n        setCurrNumberResponses(filterById(numberResponses, numberQuestion[numberQuestionIndex]._id));\n      }\n    }\n  }, [numberResponses, numberQuestion]);\n  useEffect(() => {\n    if (booleanQuestion) {\n      if (booleanQuestion[booleanQuestionIndex] && booleanResponses) {\n        setCurrBooleanResponses(); //here\n      }\n    }\n  }, [booleanResponses, booleanQuestion]); // console.log(currTextResponses)\n\n  console.log(currNumberResponses);\n  console.log(numberQuestion); //최신날짜 = 0번째\n\n  const sortByDate = list => {\n    return list.sort((a, b) => new Date(b.date) - new Date(a.date));\n  }; //오래된거 = 0 번째\n\n\n  const sortByDate2 = list => {\n    return list.sort((a, b) => new Date(a.date) - new Date(b.date));\n  };\n\n  const filterOnly = (list, prop) => {\n    if (prop === \"textResponse\") {\n      return list.filter(r => r.response.text !== \"\");\n    } else if (prop === \"textQuestion\") {\n      return list.filter(r => r.type === \"Text\");\n    } else if (prop === \"numberResponse\") {\n      return list.filter(r => r.response.number !== null);\n    } else if (prop === \"numberQuestion\") {\n      return list.filter(r => r.type === \"Number\");\n    } else if (prop === \"booleanResponse\") {\n      return list.filter(r => r.response.boolean !== null);\n    } else if (prop === \"booleanQuestion\") {\n      return list.filter(r => r.type === \"Boolean\");\n    }\n  };\n\n  const filterById = (list, id) => {\n    return list.filter(r => r.question === id);\n  };\n\n  const boolDataGen = () => {\n    let t = 0;\n    let f = 0;\n    let curr = filterById(booleanResponses, booleanQuestion[booleanQuestionIndex]);\n  }; // let sortedList;\n  //---------------for testing---------------------\n  // if(responses){\n  //     let sortedList = sortByDate(responses);\n  //     console.log(sortedList)\n  //     console.log(sortedList[textQuestionsIndex].date)\n  // }\n\n\n  const dateToString = date => {\n    return date.getFullYear() + \" / \" + (date.getMonth() + 1) + \" / \" + date.getDate();\n  };\n\n  const prev = prop => () => {\n    if (prop === 'date') {\n      if (textResponsesIndex < currTextResponses.length - 1) {\n        setTextResponsesIndex(textResponsesIndex + 1);\n      }\n    } else if (prop === 'question') {\n      if (textQuestionIndex < textQuestion.length - 1) {\n        setCurrTextResponses(filterById(textResponses, textQuestion[textQuestionIndex + 1]._id));\n        console.log(textQuestionIndex);\n        setTextQuestionIndex(textQuestionIndex + 1);\n        console.log(textQuestionIndex);\n        setTextResponsesIndex(0);\n      }\n    } else if (prop === 'number') {\n      if (numberQuestionIndex < numberQuestion.length - 1) {\n        setCurrNumberResponses(filterById(numberResponses, numberQuestion[numberQuestionIndex + 1]._id));\n        setNumberQuestionIndex(numberQuestionIndex + 1);\n      }\n    }\n  };\n\n  const next = prop => () => {\n    if (prop === 'date') {\n      if (textResponsesIndex > 0) {\n        setTextResponsesIndex(textResponsesIndex - 1);\n      }\n    } else if (prop === 'question') {\n      if (textQuestionIndex > 0) {\n        setCurrTextResponses(filterById(textResponses, textQuestion[textQuestionIndex - 1]._id));\n        console.log(textQuestionIndex);\n        setTextQuestionIndex(textQuestionIndex - 1);\n        console.log(textQuestionIndex);\n        setTextResponsesIndex(0);\n      }\n    } else if (prop === 'number') {\n      if (numberQuestionIndex > 0) {\n        setCurrNumberResponses(filterById(numberResponses, numberQuestion[numberQuestionIndex - 1]._id));\n        setNumberQuestionIndex(numberQuestionIndex - 1);\n      }\n    }\n  };\n\n  console.log(responses); // console.log(textResponses)\n\n  console.log(questions);\n  console.log(numberQuestion);\n  console.log(numberResponses);\n  console.log(textQuestion); // console.log(booleanResponses)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ViewByQuestion\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"View by Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ViewDataH1\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Text type responses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TextQuestionData\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"LogSelectionBar\",\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: currTextResponses ? currTextResponses[textResponsesIndex] ? dateToString(new Date(currTextResponses[textResponsesIndex].date)) : \"\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TextQuestionDataView\",\n        style: {\n          marginBottom: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"LogSelectionBar\",\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: prev('question'),\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"<\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: textQuestion ? textQuestion[textQuestionIndex] ? textQuestion[textQuestionIndex].header : \"\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: next('question'),\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \">\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"LogSelectionBar\",\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: prev('date'),\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"<\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: currTextResponses ? currTextResponses[textResponsesIndex] ? currTextResponses[textResponsesIndex].response.text : \"\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: next('date'),\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \">\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ViewDataH1\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Numeric type responses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NumberQuestionData\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: numberQuestion ? numberQuestion[numberQuestionIndex] ? numberQuestion[numberQuestionIndex].header : \"\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"LogSelectionBar\",\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: prev('number'),\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"<\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 400,\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            width: 900,\n            height: 400,\n            data: currNumberResponses ? currNumberResponses : [],\n            margin: {\n              top: 5,\n              right: 30,\n              left: 20,\n              bottom: 5\n            },\n            children: [/*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              dataKey: \"response.number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"response.number\",\n              stroke: \"#8884d8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: next('number'),\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \">\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ViewDataH1\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Boolean type responses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BooleanQuestionData\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: booleanQuestion ? booleanQuestion[0] ? booleanQuestion[0].header : \"\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          width: 730,\n          height: 250,\n          data: booleanResponses ? booleanResponses : [],\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"response.boolean\",\n            fill: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"uv\",\n            fill: \"#82ca9d\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ViewByQuestion, \"ud47WykcTvND1VZf2g8LBog2prg=\");\n\n_c = ViewByQuestion;\nexport default ViewByQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewByQuestion\");","map":{"version":3,"sources":["/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/ViewByQuestion.js"],"names":["React","useState","useEffect","CartesianGrid","Line","BarChart","LineChart","ResponsiveContainer","Tooltip","XAxis","YAxis","Legend","Bar","ViewByQuestion","props","responses","setResponses","questions","setQuestions","textQuestion","setTextQuestion","textResponses","setTextResponses","textResponsesIndex","setTextResponsesIndex","textQuestionIndex","setTextQuestionIndex","currTextResponses","setCurrTextResponses","numberQuestion","setNumberQuestion","numberResponses","setNumberResponses","numberQuestionIndex","setNumberQuestionIndex","currNumberResponses","setCurrNumberResponses","booleanQuestion","setBooleanQuestion","booleanResponses","setBooleanResponses","booleanQuestionIndex","setBooleanQuestionIndex","currBooleanResponses","setCurrBooleanResponses","filterOnly","sortByDate","sortByDate2","filterById","_id","console","log","list","sort","a","b","Date","date","prop","filter","r","response","text","type","number","boolean","id","question","boolDataGen","t","f","curr","dateToString","getFullYear","getMonth","getDate","prev","length","next","textAlign","marginBottom","display","flexDirection","justifyContent","header","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {\n    CartesianGrid,\n    Line,\n    BarChart,\n    LineChart,\n    ResponsiveContainer,\n    Tooltip,\n    XAxis,\n    YAxis,\n    Legend,\n    Bar\n} from \"recharts\";\nfunction ViewByQuestion(props){\n    const [responses, setResponses] = useState(props.responses);\n    const [questions, setQuestions] = useState(props.questions);\n\n    const [textQuestion, setTextQuestion] = useState();\n    const [textResponses, setTextResponses] = useState();\n    const [textResponsesIndex, setTextResponsesIndex] = useState(0);\n    //newly added\n    const [textQuestionIndex, setTextQuestionIndex] = useState(0);\n    const [currTextResponses, setCurrTextResponses] = useState();\n\n\n    const [numberQuestion, setNumberQuestion] = useState();\n    const [numberResponses, setNumberResponses] = useState();\n    //newly added\n    const [numberQuestionIndex, setNumberQuestionIndex] = useState(0);\n    const [currNumberResponses, setCurrNumberResponses] = useState();\n\n    const [booleanQuestion, setBooleanQuestion] = useState();\n    const [booleanResponses, setBooleanResponses] = useState();\n    const [booleanQuestionIndex, setBooleanQuestionIndex] = useState();\n    const [currBooleanResponses, setCurrBooleanResponses] = useState();\n\n    useEffect(()=>{\n        setQuestions(props.questions);\n        setResponses(props.responses);\n        if(props.questions){\n            setTextQuestion(filterOnly(props.questions, \"textQuestion\"))\n            setNumberQuestion(filterOnly(props.questions, \"numberQuestion\"))\n            setBooleanQuestion(filterOnly(props.questions, \"booleanQuestion\"))\n        }\n        if(props.responses){\n            setTextResponses(sortByDate(filterOnly(props.responses, \"textResponse\")));\n            setNumberResponses(sortByDate2(filterOnly(props.responses, \"numberResponse\")));\n            setBooleanResponses(sortByDate2(filterOnly(props.responses, \"booleanResponse\")));\n        }\n    },[props.responses, props.questions])\n\n    useEffect(()=>{\n        if(textQuestion){\n            if(textQuestion[textQuestionIndex] && textResponses){\n                setCurrTextResponses(filterById(textResponses, textQuestion[textQuestionIndex]._id));\n            }\n        }\n    },[textResponses, textQuestion])\n\n    useEffect(()=>{\n        if(numberQuestion){\n            if(numberQuestion[numberQuestionIndex]&& numberResponses){\n                setCurrNumberResponses(filterById(numberResponses, numberQuestion[numberQuestionIndex]._id));\n            }\n        }\n    },[numberResponses, numberQuestion])\n\n    useEffect(()=>{\n        if(booleanQuestion){\n            if(booleanQuestion[booleanQuestionIndex] && booleanResponses){\n                setCurrBooleanResponses(); //here\n            }\n        }\n    },[booleanResponses,booleanQuestion])\n\n    // console.log(currTextResponses)\n    console.log(currNumberResponses)\n    console.log(numberQuestion)\n\n    //최신날짜 = 0번째\n    const sortByDate = (list) => {\n        return list.sort((a, b) => new Date(b.date) - new Date(a.date));\n    }\n    //오래된거 = 0 번째\n    const sortByDate2 = (list) => {\n        return list.sort((a, b) => new Date(a.date) - new Date(b.date));\n    }\n\n    const filterOnly = (list, prop) => {\n        if(prop === \"textResponse\"){\n            return list.filter(r=> r.response.text !== \"\");\n        }\n        else if(prop === \"textQuestion\"){\n            return list.filter(r=> r.type === \"Text\");\n        }\n        else if(prop === \"numberResponse\"){\n            return list.filter(r=> r.response.number !== null);\n        }\n        else if(prop === \"numberQuestion\"){\n            return list.filter(r=> r.type === \"Number\");\n        }\n        else if(prop === \"booleanResponse\"){\n            return list.filter(r=> r.response.boolean !== null);\n        }\n        else if(prop === \"booleanQuestion\"){\n            return list.filter(r=> r.type === \"Boolean\");\n        }\n    }\n    const filterById = (list, id) => {\n        return list.filter(r=> r.question===id);\n    }\n\n    const boolDataGen = () =>{\n        let t = 0;\n        let f = 0;\n        let curr = filterById(booleanResponses, booleanQuestion[booleanQuestionIndex])\n    }\n\n\n    // let sortedList;\n    //---------------for testing---------------------\n    // if(responses){\n    //     let sortedList = sortByDate(responses);\n    //     console.log(sortedList)\n    //     console.log(sortedList[textQuestionsIndex].date)\n    // }\n\n    const dateToString = (date) => {\n        return date.getFullYear() + \" / \" + (date.getMonth() + 1) + \" / \" + date.getDate();\n    }\n\n    const prev = (prop)=> ()=>{\n        if(prop==='date'){\n            if(textResponsesIndex < currTextResponses.length-1){\n                setTextResponsesIndex(textResponsesIndex+1);\n            }\n        }\n        else if(prop === 'question'){\n            if(textQuestionIndex < textQuestion.length-1){\n                setCurrTextResponses(filterById(textResponses, textQuestion[textQuestionIndex+1]._id));\n                console.log(textQuestionIndex)\n                setTextQuestionIndex(textQuestionIndex+1)\n                console.log(textQuestionIndex)\n                setTextResponsesIndex(0);\n            }\n        }\n        else if(prop === 'number'){\n            if(numberQuestionIndex < numberQuestion.length-1){\n                setCurrNumberResponses(filterById(numberResponses, numberQuestion[numberQuestionIndex+1]._id));\n                setNumberQuestionIndex(numberQuestionIndex+1)\n            }\n        }\n    }\n    const next = (prop)=>()=> {\n        if(prop==='date'){\n            if(textResponsesIndex>0){\n                setTextResponsesIndex(textResponsesIndex-1);\n            }\n        }\n        else if(prop === 'question'){\n            if(textQuestionIndex >0){\n                setCurrTextResponses(filterById(textResponses, textQuestion[textQuestionIndex-1]._id));\n                console.log(textQuestionIndex)\n                setTextQuestionIndex(textQuestionIndex-1)\n                console.log(textQuestionIndex)\n                setTextResponsesIndex(0);\n            }\n        }\n        else if(prop === 'number'){\n            if(numberQuestionIndex >0){\n                setCurrNumberResponses(filterById(numberResponses, numberQuestion[numberQuestionIndex-1]._id));\n                setNumberQuestionIndex(numberQuestionIndex-1);\n            }\n        }\n    }\n\n    console.log(responses)\n    // console.log(textResponses)\n    console.log(questions)\n    console.log(numberQuestion)\n    console.log(numberResponses)\n    console.log(textQuestion)\n    // console.log(booleanResponses)\n\n\n\n\n\n    return (\n      <div className=\"ViewByQuestion\">\n          <h1>View by Question</h1>\n\n          {/*text questions*/}\n          <div className=\"ViewDataH1\">\n              <h1>Text type responses</h1>\n          </div>\n          <div className=\"TextQuestionData\">\n              <div className=\"LogSelectionBar\" style={{textAlign: 'center'}}>\n                  <h2>\n                      {/*{textResponses? (textResponses[textResponsesIndex]?textResponses[textResponsesIndex].date:\"\") : \"\"}*/}\n                      {currTextResponses? (currTextResponses[textResponsesIndex]?dateToString(new Date(currTextResponses[textResponsesIndex].date)):\"\") : \"\"}\n                  </h2>\n              </div>\n              <div className=\"TextQuestionDataView\" style={{marginBottom: 0}}>\n                  <div className=\"LogSelectionBar\" style={{display: 'flex',flexDirection: 'row', justifyContent: 'space-between'}}>\n                      <button onClick={prev('question')}>\n                          <h2>{\"<\"}</h2>\n                      </button>\n                      <h2>{textQuestion? (textQuestion[textQuestionIndex]?textQuestion[textQuestionIndex].header:\"\"): \"\"}</h2>\n                      <button onClick={next('question')}>\n                          <h2>{\">\"}</h2>\n                      </button>\n                  </div>\n                  <div className=\"LogSelectionBar\" style={{display: 'flex',flexDirection: 'row', justifyContent: 'space-between'}}>\n                      <button onClick={prev('date')}>\n                          <h2>{\"<\"}</h2>\n                      </button>\n                      <p>{currTextResponses? (currTextResponses[textResponsesIndex]? currTextResponses[textResponsesIndex].response.text:\"\"): \"\"}</p>\n                      <button onClick={next('date')}>\n                          <h2>{\">\"}</h2>\n                      </button>\n                  </div>\n              </div>\n          </div>\n\n          {/*Number Questions*/}\n          <div className=\"ViewDataH1\">\n              <h1>Numeric type responses</h1>\n          </div>\n\n          <div className=\"NumberQuestionData\">\n              <h2>{numberQuestion? (numberQuestion[numberQuestionIndex]? numberQuestion[numberQuestionIndex].header:\"\"): \"\"}</h2>\n\n              <div className=\"LogSelectionBar\" style={{display: 'flex',flexDirection: 'row', justifyContent: 'space-between'}}>\n                  <button onClick={prev('number')}>\n                      <h2>{\"<\"}</h2>\n                  </button>\n                  <ResponsiveContainer width=\"100%\" height={400}>\n                      <LineChart\n                          width={900}\n                          height={400}\n                          data={currNumberResponses? currNumberResponses : []}\n                          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n                      >\n                          <XAxis dataKey=\"date\" />\n                          <YAxis dataKey=\"response.number\"/>\n                          <Tooltip />\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <Line type=\"monotone\" dataKey=\"response.number\" stroke=\"#8884d8\"  />\n                      </LineChart>\n                  </ResponsiveContainer>\n                  <button onClick={next('number')}>\n                      <h2>{\">\"}</h2>\n                  </button>\n              </div>\n\n\n          </div>\n\n          {/*Boolean Questions*/}\n\n          <div className=\"ViewDataH1\">\n              <h1>Boolean type responses</h1>\n          </div>\n          <div className=\"BooleanQuestionData\">\n              <h2>{booleanQuestion? (booleanQuestion[0]? booleanQuestion[0].header: \"\"): \"\"}</h2>\n              <ResponsiveContainer width=\"100%\" height={400}>\n                  <BarChart\n                      width={730}\n                      height={250}\n                      data={booleanResponses?booleanResponses: []}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"name\" />\n                      <YAxis />\n                      <Tooltip />\n                      <Legend />\n                      <Bar dataKey=\"response.boolean\" fill=\"#8884d8\" />\n                      <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\n                  </BarChart>\n              </ResponsiveContainer>\n\n          </div>\n\n\n\n\n\n\n      </div>\n    );\n}\nexport default ViewByQuestion"]},"metadata":{},"sourceType":"module"}