{"ast":null,"code":"var _jsxFileName = \"/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/ViewByQuestion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CartesianGrid, Line, BarChart, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis, Legend, Bar } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ViewByQuestion(props) {\n  _s();\n\n  const [responses, setResponses] = useState(props.responses);\n  const [questions, setQuestions] = useState(props.questions);\n  const [textQuestion, setTextQuestion] = useState();\n  const [textResponses, setTextResponses] = useState();\n  const [textResponsesIndex, setTextResponsesIndex] = useState(0); //newly added\n\n  const [textQuestionIndex, setTextQuestionIndex] = useState(0);\n  const [currTextResponses, setCurrTextResponses] = useState();\n  const [numberQuestion, setNumberQuestion] = useState();\n  const [numberResponses, setNumberResponses] = useState();\n  const [booleanQuestion, setBooleanQuestion] = useState();\n  const [booleanResponses, setBooleanResponses] = useState();\n  useEffect(() => {\n    setQuestions(props.questions);\n    setResponses(props.responses);\n\n    if (props.questions) {\n      setTextQuestion(filterOnly(props.questions, \"textQuestion\"));\n      setNumberQuestion(filterOnly(props.questions, \"numberQuestion\"));\n      setBooleanQuestion(filterOnly(props.questions, \"booleanQuestion\"));\n    }\n\n    if (props.responses) {\n      setTextResponses(sortByDate(filterOnly(props.responses, \"textResponse\")));\n      setNumberResponses(sortByDate2(filterOnly(props.responses, \"numberResponse\")));\n      setBooleanResponses(sortByDate2(filterOnly(props.responses, \"booleanResponse\")));\n    }\n  }, [props.responses, props.questions]);\n  useEffect(() => {\n    // console.log(textQuestion[textQuestionIndex]);\n    if (textQuestion) {\n      // console.log(\"1PASS\")\n      if (textQuestion[textQuestionIndex] && textResponses) {\n        // console.log(\"2PASS\")\n        // console.log(textResponses)\n        // console.log(textQuestion[textQuestionIndex]._id)\n        // console.log(filterById(textResponses, textQuestion[textQuestionIndex]._id))\n        setCurrTextResponses(filterById(textResponses, textQuestion[textQuestionIndex]._id));\n      }\n    }\n  }, [textResponses, textQuestion]);\n  console.log(currTextResponses); //최신날짜 = 0번째\n\n  const sortByDate = list => {\n    return list.sort((a, b) => new Date(b.date) - new Date(a.date));\n  }; //오래된거 = 0 번째\n\n\n  const sortByDate2 = list => {\n    return list.sort((a, b) => new Date(a.date) - new Date(b.date));\n  };\n\n  const filterOnly = (list, prop) => {\n    if (prop === \"textResponse\") {\n      return list.filter(r => r.response.text !== \"\");\n    } else if (prop === \"textQuestion\") {\n      return list.filter(r => r.type === \"Text\");\n    } else if (prop === \"numberResponse\") {\n      return list.filter(r => r.response.number !== null);\n    } else if (prop === \"numberQuestion\") {\n      return list.filter(r => r.type === \"Number\");\n    } else if (prop === \"booleanResponse\") {\n      return list.filter(r => r.response.boolean !== null);\n    } else if (prop === \"booleanQuestion\") {\n      return list.filter(r => r.type === \"Boolean\");\n    }\n  };\n\n  const filterById = (list, id) => {\n    return list.filter(r => r.question === id);\n  }; // let sortedList;\n  //---------------for testing---------------------\n  // if(responses){\n  //     let sortedList = sortByDate(responses);\n  //     console.log(sortedList)\n  //     console.log(sortedList[textQuestionsIndex].date)\n  // }\n\n\n  const dateToString = date => {\n    return date.getFullYear() + \" / \" + (date.getMonth() + 1) + \" / \" + date.getDate();\n  };\n\n  const prev = prop => () => {\n    if (prop === 'date') {\n      if (textResponsesIndex < currTextResponses.length - 1) {\n        setTextResponsesIndex(textResponsesIndex + 1);\n      }\n    } else if (prop === 'question') {\n      if (textQuestionIndex < textQuestion.length - 1) {\n        setCurrTextResponses(filterById(textResponses, textQuestion[textQuestionIndex + 1]._id));\n        console.log(textQuestionIndex);\n        setTextQuestionIndex(textQuestionIndex + 1);\n        console.log(textQuestionIndex);\n        setTextResponsesIndex(0);\n      }\n    }\n  };\n\n  const next = prop => () => {\n    if (prop === 'date') {\n      if (textResponsesIndex > 0) {\n        setTextResponsesIndex(textResponsesIndex - 1);\n      }\n    } else if (prop === 'question') {\n      if (textQuestionIndex > 0) {\n        setCurrTextResponses(filterById(textResponses, textQuestion[textQuestionIndex - 1]._id));\n        console.log(textQuestionIndex);\n        setTextQuestionIndex(textQuestionIndex - 1);\n        console.log(textQuestionIndex);\n        setTextResponsesIndex(0);\n      }\n    }\n  };\n\n  console.log(responses); // console.log(textResponses)\n\n  console.log(questions);\n  console.log(numberQuestion);\n  console.log(numberResponses);\n  console.log(textQuestion); // console.log(booleanResponses)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ViewByQuestion\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"View by Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ViewDataH1\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Text type responses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TextQuestionData\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"LogSelectionBar\",\n        style: {\n          display: \"flex\",\n          flexDirection: 'row',\n          justifyContent: \"space-between\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: currTextResponses ? currTextResponses[textResponsesIndex] ? currTextResponses[textResponsesIndex].date : \"\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TextQuestionDataView\",\n        style: {\n          marginBottom: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: prev('question'),\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"<\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: textQuestion ? textQuestion[textQuestionIndex] ? textQuestion[textQuestionIndex].header : \"\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: next('question'),\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \">\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: prev('date'),\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"<\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: currTextResponses ? currTextResponses[textResponsesIndex] ? currTextResponses[textResponsesIndex].response.text : \"\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: next('date'),\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \">\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ViewDataH1\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Numeric type responses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NumberQuestionData\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: numberQuestion ? numberQuestion[0] ? numberQuestion[0].header : \"\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 900,\n          height: 400,\n          data: numberResponses ? numberResponses : [],\n          margin: {\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            dataKey: \"response.number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"response.number\",\n            stroke: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ViewDataH1\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Boolean type responses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BooleanQuestionData\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: booleanQuestion ? booleanQuestion[0] ? booleanQuestion[0].header : \"\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          width: 730,\n          height: 250,\n          data: booleanResponses ? booleanResponses : [],\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"response.boolean\",\n            fill: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"uv\",\n            fill: \"#82ca9d\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ViewByQuestion, \"J9SuZF/zM3JcChQQ4caGdzxUbL8=\");\n\n_c = ViewByQuestion;\nexport default ViewByQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewByQuestion\");","map":{"version":3,"sources":["/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/ViewByQuestion.js"],"names":["React","useState","useEffect","CartesianGrid","Line","BarChart","LineChart","ResponsiveContainer","Tooltip","XAxis","YAxis","Legend","Bar","ViewByQuestion","props","responses","setResponses","questions","setQuestions","textQuestion","setTextQuestion","textResponses","setTextResponses","textResponsesIndex","setTextResponsesIndex","textQuestionIndex","setTextQuestionIndex","currTextResponses","setCurrTextResponses","numberQuestion","setNumberQuestion","numberResponses","setNumberResponses","booleanQuestion","setBooleanQuestion","booleanResponses","setBooleanResponses","filterOnly","sortByDate","sortByDate2","filterById","_id","console","log","list","sort","a","b","Date","date","prop","filter","r","response","text","type","number","boolean","id","question","dateToString","getFullYear","getMonth","getDate","prev","length","next","display","flexDirection","justifyContent","marginBottom","header","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {\n    CartesianGrid,\n    Line,\n    BarChart,\n    LineChart,\n    ResponsiveContainer,\n    Tooltip,\n    XAxis,\n    YAxis,\n    Legend,\n    Bar\n} from \"recharts\";\nfunction ViewByQuestion(props){\n    const [responses, setResponses] = useState(props.responses);\n    const [questions, setQuestions] = useState(props.questions);\n\n    const [textQuestion, setTextQuestion] = useState();\n    const [textResponses, setTextResponses] = useState();\n    const [textResponsesIndex, setTextResponsesIndex] = useState(0);\n    //newly added\n    const [textQuestionIndex, setTextQuestionIndex] = useState(0);\n    const [currTextResponses, setCurrTextResponses] = useState();\n\n    const [numberQuestion, setNumberQuestion] = useState();\n    const [numberResponses, setNumberResponses] = useState();\n\n    const [booleanQuestion, setBooleanQuestion] = useState();\n    const [booleanResponses, setBooleanResponses] = useState();\n\n    useEffect(()=>{\n        setQuestions(props.questions);\n        setResponses(props.responses);\n        if(props.questions){\n            setTextQuestion(filterOnly(props.questions, \"textQuestion\"))\n\n            setNumberQuestion(filterOnly(props.questions, \"numberQuestion\"))\n            setBooleanQuestion(filterOnly(props.questions, \"booleanQuestion\"))\n        }\n        if(props.responses){\n            setTextResponses(sortByDate(filterOnly(props.responses, \"textResponse\")));\n\n\n            setNumberResponses(sortByDate2(filterOnly(props.responses, \"numberResponse\")));\n            setBooleanResponses(sortByDate2(filterOnly(props.responses, \"booleanResponse\")));\n        }\n    },[props.responses, props.questions])\n\n    useEffect(()=>{\n        // console.log(textQuestion[textQuestionIndex]);\n        if(textQuestion){\n            // console.log(\"1PASS\")\n            if(textQuestion[textQuestionIndex] && textResponses){\n                // console.log(\"2PASS\")\n                // console.log(textResponses)\n                // console.log(textQuestion[textQuestionIndex]._id)\n                // console.log(filterById(textResponses, textQuestion[textQuestionIndex]._id))\n                setCurrTextResponses(filterById(textResponses, textQuestion[textQuestionIndex]._id));\n            }\n        }\n    },[textResponses, textQuestion])\n\n    console.log(currTextResponses)\n\n    //최신날짜 = 0번째\n    const sortByDate = (list) => {\n        return list.sort((a, b) => new Date(b.date) - new Date(a.date));\n    }\n    //오래된거 = 0 번째\n    const sortByDate2 = (list) => {\n        return list.sort((a, b) => new Date(a.date) - new Date(b.date));\n    }\n\n    const filterOnly = (list, prop) => {\n        if(prop === \"textResponse\"){\n            return list.filter(r=> r.response.text !== \"\");\n        }\n        else if(prop === \"textQuestion\"){\n            return list.filter(r=> r.type === \"Text\");\n        }\n        else if(prop === \"numberResponse\"){\n            return list.filter(r=> r.response.number !== null);\n        }\n        else if(prop === \"numberQuestion\"){\n            return list.filter(r=> r.type === \"Number\");\n        }\n        else if(prop === \"booleanResponse\"){\n            return list.filter(r=> r.response.boolean !== null);\n        }\n        else if(prop === \"booleanQuestion\"){\n            return list.filter(r=> r.type === \"Boolean\");\n        }\n    }\n    const filterById = (list, id) => {\n        return list.filter(r=> r.question===id);\n    }\n\n\n    // let sortedList;\n    //---------------for testing---------------------\n    // if(responses){\n    //     let sortedList = sortByDate(responses);\n    //     console.log(sortedList)\n    //     console.log(sortedList[textQuestionsIndex].date)\n    // }\n\n    const dateToString = (date) => {\n        return date.getFullYear() + \" / \" + (date.getMonth() + 1) + \" / \" + date.getDate();\n    }\n\n    const prev = (prop)=> ()=>{\n        if(prop==='date'){\n            if(textResponsesIndex < currTextResponses.length-1){\n                setTextResponsesIndex(textResponsesIndex+1);\n            }\n        }\n        else if(prop === 'question'){\n            if(textQuestionIndex < textQuestion.length-1){\n                setCurrTextResponses(filterById(textResponses, textQuestion[textQuestionIndex+1]._id));\n                console.log(textQuestionIndex)\n                setTextQuestionIndex(textQuestionIndex+1)\n                console.log(textQuestionIndex)\n                setTextResponsesIndex(0);\n            }\n        }\n    }\n    const next = (prop)=>()=> {\n        if(prop==='date'){\n            if(textResponsesIndex>0){\n                setTextResponsesIndex(textResponsesIndex-1);\n            }\n        }\n        else if(prop === 'question'){\n            if(textQuestionIndex >0){\n                setCurrTextResponses(filterById(textResponses, textQuestion[textQuestionIndex-1]._id));\n                console.log(textQuestionIndex)\n                setTextQuestionIndex(textQuestionIndex-1)\n                console.log(textQuestionIndex)\n                setTextResponsesIndex(0);\n            }\n        }\n    }\n\n    console.log(responses)\n    // console.log(textResponses)\n    console.log(questions)\n    console.log(numberQuestion)\n    console.log(numberResponses)\n    console.log(textQuestion)\n    // console.log(booleanResponses)\n\n\n\n\n\n    return (\n      <div className=\"ViewByQuestion\">\n          <h1>View by Question</h1>\n\n          {/*text questions*/}\n          <div className=\"ViewDataH1\">\n              <h1>Text type responses</h1>\n          </div>\n          <div className=\"TextQuestionData\">\n              <div className=\"LogSelectionBar\" style={{display: \"flex\", flexDirection: 'row',justifyContent: \"space-between\"}}>\n                  <h2>\n                      {/*{textResponses? (textResponses[textResponsesIndex]?textResponses[textResponsesIndex].date:\"\") : \"\"}*/}\n                      {currTextResponses? (currTextResponses[textResponsesIndex]?currTextResponses[textResponsesIndex].date:\"\") : \"\"}\n                  </h2>\n              </div>\n              <div className=\"TextQuestionDataView\" style={{marginBottom: 0}}>\n                  <div style={{display: 'flex',flexDirection: 'row', justifyContent: 'space-between'}}>\n                      <button onClick={prev('question')}>\n                          <h2>{\"<\"}</h2>\n                      </button>\n                      <h2>{textQuestion? (textQuestion[textQuestionIndex]?textQuestion[textQuestionIndex].header:\"\"): \"\"}</h2>\n                      <button onClick={next('question')}>\n                          <h2>{\">\"}</h2>\n                      </button>\n                  </div>\n                  <div style={{display: 'flex',flexDirection: 'row', justifyContent: 'space-between'}}>\n                      <button onClick={prev('date')}>\n                          <h2>{\"<\"}</h2>\n                      </button>\n                      <p>{currTextResponses? (currTextResponses[textResponsesIndex]? currTextResponses[textResponsesIndex].response.text:\"\"): \"\"}</p>\n                      <button onClick={next('date')}>\n                          <h2>{\">\"}</h2>\n                      </button>\n                  </div>\n              </div>\n          </div>\n\n          {/*Number Questions*/}\n          <div className=\"ViewDataH1\">\n              <h1>Numeric type responses</h1>\n          </div>\n\n          <div className=\"NumberQuestionData\">\n              <h2>{numberQuestion? (numberQuestion[0]? numberQuestion[0].header:\"\"): \"\"}</h2>\n\n              <ResponsiveContainer width=\"100%\" height={400}>\n                  <LineChart\n                      width={900}\n                      height={400}\n                      data={numberResponses? numberResponses : []}\n                      margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n                  >\n                      <XAxis dataKey=\"date\" />\n                      <YAxis dataKey=\"response.number\"/>\n                      <Tooltip />\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <Line type=\"monotone\" dataKey=\"response.number\" stroke=\"#8884d8\"  />\n                  </LineChart>\n              </ResponsiveContainer>\n\n          </div>\n\n          {/*Boolean Questions*/}\n\n          <div className=\"ViewDataH1\">\n              <h1>Boolean type responses</h1>\n          </div>\n          <div className=\"BooleanQuestionData\">\n              <h2>{booleanQuestion? (booleanQuestion[0]? booleanQuestion[0].header: \"\"): \"\"}</h2>\n              <ResponsiveContainer width=\"100%\" height={400}>\n                  <BarChart\n                      width={730}\n                      height={250}\n                      data={booleanResponses?booleanResponses: []}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"name\" />\n                      <YAxis />\n                      <Tooltip />\n                      <Legend />\n                      <Bar dataKey=\"response.boolean\" fill=\"#8884d8\" />\n                      <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\n                  </BarChart>\n              </ResponsiveContainer>\n\n          </div>\n\n\n\n\n\n\n      </div>\n    );\n}\nexport default ViewByQuestion"]},"metadata":{},"sourceType":"module"}