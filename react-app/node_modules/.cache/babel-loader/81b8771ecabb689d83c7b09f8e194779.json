{"ast":null,"code":"var _jsxFileName = \"/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/ViewByQuestion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CartesianGrid, Line, BarChart, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis, Legend, Bar } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ViewByQuestion(props) {\n  _s();\n\n  const [responses, setResponses] = useState(props.responses);\n  const [questions, setQuestions] = useState(props.questions);\n  const [textQuestion, setTextQuestion] = useState();\n  const [textResponses, setTextResponses] = useState();\n  const [textResponsesIndex, setTextResponsesIndex] = useState(0); //newly added\n\n  const [textQuestionIndex, setTextQuestionIndex] = useState(0);\n  const [currTextResponses, setCurrTextResponses] = useState();\n  const [numberQuestion, setNumberQuestion] = useState();\n  const [numberResponses, setNumberResponses] = useState(); //newly added\n\n  const [numberQuestionIndex, setNumberQuestionIndex] = useState(0);\n  const [currNumberResponses, setCurrNumberResponses] = useState();\n  const [booleanQuestion, setBooleanQuestion] = useState();\n  const [booleanResponses, setBooleanResponses] = useState();\n  const [booleanQuestionIndex, setBooleanQuestionIndex] = useState(0);\n  const [currBooleanResponses, setCurrBooleanResponses] = useState(); //newly added\n\n  const [multipleQuestion, setMultipleQuestion] = useState();\n  const [multipleResponses, setMultipleResponses] = useState();\n  const [multipleQuestionIndex, setMultipleQuestionIndex] = useState(0);\n  const [currMultipleResponses, setCurrMultipleResponses] = useState();\n  useEffect(() => {\n    setQuestions(props.questions);\n    setResponses(props.responses);\n\n    if (props.questions) {\n      setTextQuestion(filterOnly(props.questions, \"textQuestion\"));\n      setNumberQuestion(filterOnly(props.questions, \"numberQuestion\"));\n      setBooleanQuestion(filterOnly(props.questions, \"booleanQuestion\")); //newly added\n\n      setMultipleQuestion(filterOnly(props.questions, 'multipleQuestion'));\n    }\n\n    if (props.responses) {\n      setTextResponses(sortByDate(filterOnly(props.responses, \"textResponse\")));\n      setNumberResponses(sortByDate2(filterOnly(props.responses, \"numberResponse\")));\n      setBooleanResponses(sortByDate2(filterOnly(props.responses, \"booleanResponse\"))); //newly added\n\n      setMultipleResponses(sortByDate2(filterOnly(props.responses, 'multipleResponse')));\n    }\n  }, [props.responses, props.questions]);\n  useEffect(() => {\n    if (textQuestion) {\n      if (textQuestion[textQuestionIndex] && textResponses) {\n        setCurrTextResponses(filterById(textResponses, textQuestion[textQuestionIndex]._id));\n      }\n    }\n  }, [textResponses, textQuestion]);\n  useEffect(() => {\n    if (numberQuestion) {\n      if (numberQuestion[numberQuestionIndex] && numberResponses) {\n        setCurrNumberResponses(filterById(numberResponses, numberQuestion[numberQuestionIndex]._id));\n      }\n    }\n  }, [numberResponses, numberQuestion]);\n  useEffect(() => {\n    if (booleanQuestion) {\n      if (booleanQuestion[booleanQuestionIndex] && booleanResponses) {\n        setCurrBooleanResponses(boolDataGen());\n      }\n    }\n  }, [booleanResponses, booleanQuestion, booleanQuestionIndex]);\n  useEffect(() => {\n    if (multipleQuestion) {\n      if (multipleQuestion[multipleQuestionIndex] && multipleResponses) {\n        setCurrMultipleResponses(multDataGen());\n      }\n    }\n  }, [multipleResponses, multipleQuestion, multipleQuestionIndex]); // console.log(currTextResponses)\n  // console.log(currNumberResponses)\n  // console.log(numberQuestion)\n  //최신날짜 = 0번째\n\n  const sortByDate = list => {\n    return list.sort((a, b) => new Date(b.date) - new Date(a.date));\n  }; //오래된거 = 0 번째\n\n\n  const sortByDate2 = list => {\n    return list.sort((a, b) => new Date(a.date) - new Date(b.date));\n  };\n\n  const filterOnly = (list, prop) => {\n    if (prop === \"textResponse\") {\n      return list.filter(r => r.response.text !== \"\");\n    } else if (prop === \"textQuestion\") {\n      return list.filter(r => r.type === \"Text\");\n    } else if (prop === \"numberResponse\") {\n      return list.filter(r => r.response.number !== null);\n    } else if (prop === \"numberQuestion\") {\n      return list.filter(r => r.type === \"Number\");\n    } else if (prop === \"booleanResponse\") {\n      return list.filter(r => r.response.boolean !== null);\n    } else if (prop === \"booleanQuestion\") {\n      return list.filter(r => r.type === \"Boolean\");\n    } //newly added\n    else if (prop === \"multipleResponse\") {\n      return list.filter(r => r.response.multiple_choice.length !== 0);\n    } else if (prop === \"multipleQuestion\") {\n      return list.filter(r => r.type === \"MultipleChoice\");\n    }\n  };\n\n  const filterById = (list, id) => {\n    return list.filter(r => r.question === id);\n  };\n\n  const boolDataGen = () => {\n    let t = 0;\n    let f = 0;\n    let curr = filterById(booleanResponses, booleanQuestion[booleanQuestionIndex]._id);\n    curr.map(r => {\n      if (r.response.boolean) {\n        t++;\n      } else {\n        f++;\n      }\n    });\n    console.log(t);\n    console.log(f);\n    let temp = [{\n      \"name\": booleanQuestion[booleanQuestionIndex].header,\n      \"True\": t,\n      \"False\": f\n    }];\n    return temp;\n  };\n\n  const multDataGen = () => {\n    let c1 = 0;\n    let c2 = 0;\n    let c3 = 0;\n    let curr = filterById(multipleResponses, multipleQuestion[multipleQuestionIndex]._id);\n    curr.map(r => {\n      if (r.response.multiple_choice[0]) {\n        c1++;\n      } else if (r.response.multiple_choice[1]) {\n        c2++;\n      } else {\n        c3++;\n      }\n    });\n    let t1 = multipleQuestion[multipleQuestionIndex].choices[0];\n    let t2 = multipleQuestion[multipleQuestionIndex].choices[1];\n    let t3 = multipleQuestion[multipleQuestionIndex].choices[2];\n    let temp = [{\n      \"name\": multipleQuestion[multipleQuestionIndex].header,\n      \"choice 1\": c1,\n      \"choice 2\": c2,\n      \"choice 3\": c3\n    }];\n    return temp;\n  };\n\n  console.log(multipleQuestion);\n  console.log(multipleResponses);\n\n  const dateToString = date => {\n    return date.getFullYear() + \" / \" + (date.getMonth() + 1) + \" / \" + date.getDate();\n  };\n\n  const prev = prop => () => {\n    if (prop === 'date') {\n      if (textResponsesIndex < currTextResponses.length - 1) {\n        setTextResponsesIndex(textResponsesIndex + 1);\n      }\n    } else if (prop === 'question') {\n      if (textQuestionIndex < textQuestion.length - 1) {\n        setCurrTextResponses(filterById(textResponses, textQuestion[textQuestionIndex + 1]._id));\n        console.log(textQuestionIndex);\n        setTextQuestionIndex(textQuestionIndex + 1);\n        console.log(textQuestionIndex);\n        setTextResponsesIndex(0);\n      }\n    } else if (prop === 'number') {\n      if (numberQuestionIndex < numberQuestion.length - 1) {\n        setCurrNumberResponses(filterById(numberResponses, numberQuestion[numberQuestionIndex + 1]._id));\n        setNumberQuestionIndex(numberQuestionIndex + 1);\n      }\n    } else if (prop === 'boolean') {\n      if (booleanQuestionIndex < booleanQuestion.length - 1) {\n        setBooleanQuestionIndex(booleanQuestionIndex + 1);\n      }\n    } else if (prop === 'multiple') {\n      if (multipleQuestionIndex < multipleQuestion.length - 1) {\n        setMultipleQuestionIndex(multipleQuestionIndex + 1);\n      }\n    }\n  };\n\n  const next = prop => () => {\n    if (prop === 'date') {\n      if (textResponsesIndex > 0) {\n        setTextResponsesIndex(textResponsesIndex - 1);\n      }\n    } else if (prop === 'question') {\n      if (textQuestionIndex > 0) {\n        setCurrTextResponses(filterById(textResponses, textQuestion[textQuestionIndex - 1]._id));\n        console.log(textQuestionIndex);\n        setTextQuestionIndex(textQuestionIndex - 1);\n        console.log(textQuestionIndex);\n        setTextResponsesIndex(0);\n      }\n    } else if (prop === 'number') {\n      if (numberQuestionIndex > 0) {\n        setCurrNumberResponses(filterById(numberResponses, numberQuestion[numberQuestionIndex - 1]._id));\n        setNumberQuestionIndex(numberQuestionIndex - 1);\n      }\n    } else if (prop === 'boolean') {\n      if (booleanQuestionIndex > 0) {\n        setBooleanQuestionIndex(booleanQuestionIndex - 1);\n      }\n    } else if (prop === 'multiple') {\n      if (multipleQuestionIndex > 0) {\n        setMultipleQuestionIndex(multipleQuestionIndex - 1);\n      }\n    }\n  };\n\n  const downloadFile = _ref => {\n    let {\n      data,\n      fileName,\n      fileType\n    } = _ref;\n    // Create a blob with the data we want to download as a file\n    const blob = new Blob([data], {\n      type: fileType\n    }); // Create an anchor element and dispatch a click event on it\n    // to trigger a download\n\n    const a = document.createElement('a');\n    a.download = fileName;\n    a.href = window.URL.createObjectURL(blob);\n    const clickEvt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: true\n    });\n    a.dispatchEvent(clickEvt);\n    a.remove();\n  };\n\n  const exportResponseToJson = e => {\n    e.preventDefault();\n    downloadFile({\n      data: JSON.stringify(props.responses),\n      fileName: 'responses.json',\n      fileType: 'text/json'\n    });\n  };\n\n  const exportQuestionToJson = e => {\n    e.preventDefault();\n    downloadFile({\n      data: JSON.stringify(props.questions),\n      fileName: 'questions.json',\n      fileType: 'text/json'\n    });\n  }; // console.log(responses)\n  // console.log(textResponses)\n  // console.log(questions)\n  // console.log(numberQuestion)\n  // console.log(numberResponses)\n  // console.log(textQuestion)\n  // console.log(booleanQuestion)\n  // console.log(booleanResponses)\n  // console.log(currBooleanResponses)\n  //console.log(currBooleanResponses[0])\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ViewByQuestion\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"View by Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ViewDataH1\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Text type responses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TextQuestionData\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"LogSelectionBar\",\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: currTextResponses ? currTextResponses[textResponsesIndex] ? dateToString(new Date(currTextResponses[textResponsesIndex].date)) : \"\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TextQuestionDataView\",\n        style: {\n          marginBottom: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"LogSelectionBar\",\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: prev('question'),\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"<\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: textQuestion ? textQuestion[textQuestionIndex] ? textQuestion[textQuestionIndex].header : \"\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: next('question'),\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \">\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"LogSelectionBar\",\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: prev('date'),\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"<\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: currTextResponses ? currTextResponses[textResponsesIndex] ? currTextResponses[textResponsesIndex].response.text : \"No response records\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: next('date'),\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \">\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ViewDataH1\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Numeric type responses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"NumberQuestionData\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: numberQuestion ? numberQuestion[numberQuestionIndex] ? numberQuestion[numberQuestionIndex].header : \"\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"LogSelectionBar\",\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: prev('number'),\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"<\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 400,\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            width: 900,\n            height: 400,\n            data: currNumberResponses ? currNumberResponses : [],\n            margin: {\n              top: 5,\n              right: 30,\n              left: 20,\n              bottom: 5\n            },\n            children: [/*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              dataKey: \"response.number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"response.number\",\n              stroke: \"#8884d8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: next('number'),\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \">\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ViewDataH1\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Boolean type responses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BooleanQuestionData\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: booleanQuestion ? booleanQuestion[booleanQuestionIndex] ? booleanQuestion[booleanQuestionIndex].header : \"\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"LogSelectionBar\",\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: prev('boolean'),\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"<\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 400,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            width: 730,\n            height: 250,\n            data: currBooleanResponses ? currBooleanResponses : [],\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"True\",\n              fill: \"#8884d8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"False\",\n              fill: \"#82ca9d\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: next('boolean'),\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \">\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ViewDataH1\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Multiple Choice type responses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MultipleChoiceQuestionData\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: multipleQuestion ? multipleQuestion[multipleQuestionIndex] ? multipleQuestion[multipleQuestionIndex].header : \"\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"LogSelectionBar\",\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: prev('multiple'),\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"<\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 400,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            width: 730,\n            height: 250,\n            data: currMultipleResponses ? currMultipleResponses : [],\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"choice 1\",\n              name: multipleQuestion ? multipleQuestion[multipleQuestionIndex] ? multipleQuestion[multipleQuestionIndex].choices[0] : \"\" : \"\",\n              fill: \"#8884d8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"choice 2\",\n              name: multipleQuestion ? multipleQuestion[multipleQuestionIndex] ? multipleQuestion[multipleQuestionIndex].choices[1] : \"\" : \"\",\n              fill: \"#82ca9d\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"choice 3\",\n              name: multipleQuestion ? multipleQuestion[multipleQuestionIndex] ? multipleQuestion[multipleQuestionIndex].choices[2] : \"\" : \"\",\n              fill: \"#ffc658\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: next('multiple'),\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \">\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ViewByQuestion, \"fP+wKXj0+SZQsEnPawRUKtBmwWI=\");\n\n_c = ViewByQuestion;\nexport default ViewByQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewByQuestion\");","map":{"version":3,"sources":["/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/ViewByQuestion.js"],"names":["React","useState","useEffect","CartesianGrid","Line","BarChart","LineChart","ResponsiveContainer","Tooltip","XAxis","YAxis","Legend","Bar","ViewByQuestion","props","responses","setResponses","questions","setQuestions","textQuestion","setTextQuestion","textResponses","setTextResponses","textResponsesIndex","setTextResponsesIndex","textQuestionIndex","setTextQuestionIndex","currTextResponses","setCurrTextResponses","numberQuestion","setNumberQuestion","numberResponses","setNumberResponses","numberQuestionIndex","setNumberQuestionIndex","currNumberResponses","setCurrNumberResponses","booleanQuestion","setBooleanQuestion","booleanResponses","setBooleanResponses","booleanQuestionIndex","setBooleanQuestionIndex","currBooleanResponses","setCurrBooleanResponses","multipleQuestion","setMultipleQuestion","multipleResponses","setMultipleResponses","multipleQuestionIndex","setMultipleQuestionIndex","currMultipleResponses","setCurrMultipleResponses","filterOnly","sortByDate","sortByDate2","filterById","_id","boolDataGen","multDataGen","list","sort","a","b","Date","date","prop","filter","r","response","text","type","number","boolean","multiple_choice","length","id","question","t","f","curr","map","console","log","temp","header","c1","c2","c3","t1","choices","t2","t3","dateToString","getFullYear","getMonth","getDate","prev","next","downloadFile","data","fileName","fileType","blob","Blob","document","createElement","download","href","window","URL","createObjectURL","clickEvt","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","exportResponseToJson","e","preventDefault","JSON","stringify","exportQuestionToJson","textAlign","marginBottom","display","flexDirection","justifyContent","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {\n    CartesianGrid,\n    Line,\n    BarChart,\n    LineChart,\n    ResponsiveContainer,\n    Tooltip,\n    XAxis,\n    YAxis,\n    Legend,\n    Bar\n} from \"recharts\";\nfunction ViewByQuestion(props){\n    const [responses, setResponses] = useState(props.responses);\n    const [questions, setQuestions] = useState(props.questions);\n\n    const [textQuestion, setTextQuestion] = useState();\n    const [textResponses, setTextResponses] = useState();\n    const [textResponsesIndex, setTextResponsesIndex] = useState(0);\n    //newly added\n    const [textQuestionIndex, setTextQuestionIndex] = useState(0);\n    const [currTextResponses, setCurrTextResponses] = useState();\n\n\n    const [numberQuestion, setNumberQuestion] = useState();\n    const [numberResponses, setNumberResponses] = useState();\n    //newly added\n    const [numberQuestionIndex, setNumberQuestionIndex] = useState(0);\n    const [currNumberResponses, setCurrNumberResponses] = useState();\n\n    const [booleanQuestion, setBooleanQuestion] = useState();\n    const [booleanResponses, setBooleanResponses] = useState();\n    const [booleanQuestionIndex, setBooleanQuestionIndex] = useState(0);\n    const [currBooleanResponses, setCurrBooleanResponses] = useState();\n\n    //newly added\n    const [multipleQuestion, setMultipleQuestion] = useState();\n    const [multipleResponses, setMultipleResponses] = useState();\n    const [multipleQuestionIndex, setMultipleQuestionIndex] = useState(0);\n    const [currMultipleResponses, setCurrMultipleResponses] = useState();\n\n\n    useEffect(()=>{\n        setQuestions(props.questions);\n        setResponses(props.responses);\n        if(props.questions){\n            setTextQuestion(filterOnly(props.questions, \"textQuestion\"))\n            setNumberQuestion(filterOnly(props.questions, \"numberQuestion\"))\n            setBooleanQuestion(filterOnly(props.questions, \"booleanQuestion\"))\n            //newly added\n            setMultipleQuestion(filterOnly(props.questions, 'multipleQuestion'))\n        }\n        if(props.responses){\n            setTextResponses(sortByDate(filterOnly(props.responses, \"textResponse\")));\n            setNumberResponses(sortByDate2(filterOnly(props.responses, \"numberResponse\")));\n            setBooleanResponses(sortByDate2(filterOnly(props.responses, \"booleanResponse\")));\n            //newly added\n            setMultipleResponses(sortByDate2(filterOnly(props.responses, 'multipleResponse')))\n        }\n    },[props.responses, props.questions])\n\n    useEffect(()=>{\n        if(textQuestion){\n            if(textQuestion[textQuestionIndex] && textResponses){\n                setCurrTextResponses(filterById(textResponses, textQuestion[textQuestionIndex]._id));\n            }\n        }\n    },[textResponses, textQuestion])\n\n    useEffect(()=>{\n        if(numberQuestion){\n            if(numberQuestion[numberQuestionIndex]&& numberResponses){\n                setCurrNumberResponses(filterById(numberResponses, numberQuestion[numberQuestionIndex]._id));\n            }\n        }\n    },[numberResponses, numberQuestion])\n\n    useEffect(()=>{\n        if(booleanQuestion){\n            if(booleanQuestion[booleanQuestionIndex] && booleanResponses){\n                setCurrBooleanResponses(boolDataGen());\n            }\n        }\n    },[booleanResponses,booleanQuestion,booleanQuestionIndex])\n\n    useEffect(()=>{\n        if(multipleQuestion){\n            if(multipleQuestion[multipleQuestionIndex] && multipleResponses){\n                setCurrMultipleResponses(multDataGen());\n            }\n        }\n    }, [multipleResponses,multipleQuestion, multipleQuestionIndex])\n\n    // console.log(currTextResponses)\n    // console.log(currNumberResponses)\n    // console.log(numberQuestion)\n\n    //최신날짜 = 0번째\n    const sortByDate = (list) => {\n        return list.sort((a, b) => new Date(b.date) - new Date(a.date));\n    }\n    //오래된거 = 0 번째\n    const sortByDate2 = (list) => {\n        return list.sort((a, b) => new Date(a.date) - new Date(b.date));\n    }\n\n    const filterOnly = (list, prop) => {\n        if(prop === \"textResponse\"){\n            return list.filter(r=> r.response.text !== \"\");\n        }\n        else if(prop === \"textQuestion\"){\n            return list.filter(r=> r.type === \"Text\");\n        }\n        else if(prop === \"numberResponse\"){\n            return list.filter(r=> r.response.number !== null);\n        }\n        else if(prop === \"numberQuestion\"){\n            return list.filter(r=> r.type === \"Number\");\n        }\n        else if(prop === \"booleanResponse\"){\n            return list.filter(r=> r.response.boolean !== null);\n        }\n        else if(prop === \"booleanQuestion\"){\n            return list.filter(r=> r.type === \"Boolean\");\n        }\n\n        //newly added\n        else if(prop === \"multipleResponse\"){\n            return list.filter(r=> r.response.multiple_choice.length !== 0);\n        }\n        else if(prop === \"multipleQuestion\"){\n            return list.filter(r=> r.type === \"MultipleChoice\");\n        }\n    }\n    const filterById = (list, id) => {\n        return list.filter(r=> r.question===id);\n    }\n\n    const boolDataGen = () =>{\n        let t = 0;\n        let f = 0;\n        let curr = filterById(booleanResponses, booleanQuestion[booleanQuestionIndex]._id);\n        curr.map((r)=>{\n            if(r.response.boolean){\n                t++;\n            }\n            else{\n                f++;\n            }\n        })\n        console.log(t);\n        console.log(f);\n        let temp = [{\n            \"name\": booleanQuestion[booleanQuestionIndex].header,\n            \"True\": t,\n            \"False\": f\n        }]\n        return temp;\n    }\n\n    const multDataGen = () =>{\n        let c1 = 0;\n        let c2 = 0;\n        let c3 = 0;\n\n        let curr = filterById(multipleResponses, multipleQuestion[multipleQuestionIndex]._id);\n        curr.map((r)=>{\n            if(r.response.multiple_choice[0]){\n                c1++;\n            }\n            else if(r.response.multiple_choice[1]){\n                c2++;\n            }\n            else{\n                c3++;\n            }\n        })\n        let t1 = multipleQuestion[multipleQuestionIndex].choices[0];\n        let t2 = multipleQuestion[multipleQuestionIndex].choices[1];\n        let t3 = multipleQuestion[multipleQuestionIndex].choices[2];\n        let temp = [{\n            \"name\": multipleQuestion[multipleQuestionIndex].header,\n            \"choice 1\" : c1,\n            \"choice 2\" : c2,\n            \"choice 3\" : c3\n        }]\n        return temp;\n    }\n    console.log(multipleQuestion);\n    console.log(multipleResponses);\n\n    const dateToString = (date) => {\n        return date.getFullYear() + \" / \" + (date.getMonth() + 1) + \" / \" + date.getDate();\n    }\n\n    const prev = (prop)=> ()=>{\n        if(prop==='date'){\n            if(textResponsesIndex < currTextResponses.length-1){\n                setTextResponsesIndex(textResponsesIndex+1);\n            }\n        }\n        else if(prop === 'question'){\n            if(textQuestionIndex < textQuestion.length-1){\n                setCurrTextResponses(filterById(textResponses, textQuestion[textQuestionIndex+1]._id));\n                console.log(textQuestionIndex)\n                setTextQuestionIndex(textQuestionIndex+1)\n                console.log(textQuestionIndex)\n                setTextResponsesIndex(0);\n            }\n        }\n        else if(prop === 'number'){\n            if(numberQuestionIndex < numberQuestion.length-1){\n                setCurrNumberResponses(filterById(numberResponses, numberQuestion[numberQuestionIndex+1]._id));\n                setNumberQuestionIndex(numberQuestionIndex+1)\n            }\n        }\n        else if(prop === 'boolean'){\n            if(booleanQuestionIndex < booleanQuestion.length-1){\n                setBooleanQuestionIndex(booleanQuestionIndex+1);\n            }\n        }\n        else if(prop === 'multiple'){\n            if(multipleQuestionIndex < multipleQuestion.length-1){\n                setMultipleQuestionIndex(multipleQuestionIndex+1);\n            }\n        }\n    }\n    const next = (prop)=>()=> {\n        if(prop==='date'){\n            if(textResponsesIndex>0){\n                setTextResponsesIndex(textResponsesIndex-1);\n            }\n        }\n        else if(prop === 'question'){\n            if(textQuestionIndex >0){\n                setCurrTextResponses(filterById(textResponses, textQuestion[textQuestionIndex-1]._id));\n                console.log(textQuestionIndex)\n                setTextQuestionIndex(textQuestionIndex-1)\n                console.log(textQuestionIndex)\n                setTextResponsesIndex(0);\n            }\n        }\n        else if(prop === 'number'){\n            if(numberQuestionIndex >0){\n                setCurrNumberResponses(filterById(numberResponses, numberQuestion[numberQuestionIndex-1]._id));\n                setNumberQuestionIndex(numberQuestionIndex-1);\n            }\n        }\n        else if(prop === 'boolean'){\n            if(booleanQuestionIndex >0){\n                setBooleanQuestionIndex(booleanQuestionIndex-1);\n            }\n        }\n        else if(prop === 'multiple'){\n            if(multipleQuestionIndex >0){\n                setMultipleQuestionIndex(multipleQuestionIndex-1);\n            }\n        }\n    }\n\n    const downloadFile = ({ data, fileName, fileType }) => {\n        // Create a blob with the data we want to download as a file\n        const blob = new Blob([data], { type: fileType })\n        // Create an anchor element and dispatch a click event on it\n        // to trigger a download\n        const a = document.createElement('a')\n        a.download = fileName\n        a.href = window.URL.createObjectURL(blob)\n        const clickEvt = new MouseEvent('click', {\n            view: window,\n            bubbles: true,\n            cancelable: true,\n        })\n        a.dispatchEvent(clickEvt)\n        a.remove()\n    }\n\n    const exportResponseToJson = e => {\n        e.preventDefault()\n        downloadFile({\n            data: JSON.stringify(props.responses),\n            fileName: 'responses.json',\n            fileType: 'text/json',\n        })\n    }\n    const exportQuestionToJson = e => {\n        e.preventDefault()\n        downloadFile({\n            data: JSON.stringify(props.questions),\n            fileName: 'questions.json',\n            fileType: 'text/json',\n        })\n    }\n\n    // console.log(responses)\n    // console.log(textResponses)\n    // console.log(questions)\n    // console.log(numberQuestion)\n    // console.log(numberResponses)\n    // console.log(textQuestion)\n    // console.log(booleanQuestion)\n    // console.log(booleanResponses)\n    // console.log(currBooleanResponses)\n    //console.log(currBooleanResponses[0])\n\n\n\n\n\n    return (\n      <div className=\"ViewByQuestion\">\n          <h1>View by Question</h1>\n\n          {/*text questions*/}\n          <div className=\"ViewDataH1\">\n              <h1>Text type responses</h1>\n          </div>\n          <div className=\"TextQuestionData\">\n              <div className=\"LogSelectionBar\" style={{textAlign: 'center'}}>\n                  <h2>\n                      {/*{textResponses? (textResponses[textResponsesIndex]?textResponses[textResponsesIndex].date:\"\") : \"\"}*/}\n                      {currTextResponses? (currTextResponses[textResponsesIndex]?dateToString(new Date(currTextResponses[textResponsesIndex].date)):\"\") : \"\"}\n                  </h2>\n              </div>\n              <div className=\"TextQuestionDataView\" style={{marginBottom: 0}}>\n                  <div className=\"LogSelectionBar\" style={{display: 'flex',flexDirection: 'row', justifyContent: 'space-between'}}>\n                      <button onClick={prev('question')}>\n                          <h2>{\"<\"}</h2>\n                      </button>\n                      <h2>{textQuestion? (textQuestion[textQuestionIndex]?textQuestion[textQuestionIndex].header:\"\"): \"\"}</h2>\n                      <button onClick={next('question')}>\n                          <h2>{\">\"}</h2>\n                      </button>\n                  </div>\n                  <div className=\"LogSelectionBar\" style={{display: 'flex',flexDirection: 'row', justifyContent: 'space-between'}}>\n                      <button onClick={prev('date')}>\n                          <h2>{\"<\"}</h2>\n                      </button>\n                      <p>{currTextResponses? (currTextResponses[textResponsesIndex]? currTextResponses[textResponsesIndex].response.text:\"No response records\"): \"\"}</p>\n                      <button onClick={next('date')}>\n                          <h2>{\">\"}</h2>\n                      </button>\n                  </div>\n              </div>\n          </div>\n\n          {/*Number Questions*/}\n          <div className=\"ViewDataH1\">\n              <h1>Numeric type responses</h1>\n          </div>\n\n          <div className=\"NumberQuestionData\">\n              <h2>{numberQuestion? (numberQuestion[numberQuestionIndex]? numberQuestion[numberQuestionIndex].header:\"\"): \"\"}</h2>\n\n              <div className=\"LogSelectionBar\" style={{display: 'flex',flexDirection: 'row', justifyContent: 'space-between'}}>\n                  <button onClick={prev('number')}>\n                      <h2>{\"<\"}</h2>\n                  </button>\n                  <ResponsiveContainer width=\"100%\" height={400}>\n                      <LineChart\n                          width={900}\n                          height={400}\n                          data={currNumberResponses? currNumberResponses : []}\n                          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n                      >\n                          <XAxis dataKey=\"date\" />\n                          <YAxis dataKey=\"response.number\"/>\n                          <Tooltip />\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <Line type=\"monotone\" dataKey=\"response.number\" stroke=\"#8884d8\"  />\n                      </LineChart>\n                  </ResponsiveContainer>\n                  <button onClick={next('number')}>\n                      <h2>{\">\"}</h2>\n                  </button>\n              </div>\n\n\n          </div>\n\n          {/*Boolean Questions*/}\n\n          <div className=\"ViewDataH1\">\n              <h1>Boolean type responses</h1>\n          </div>\n          <div className=\"BooleanQuestionData\">\n              <h2>{booleanQuestion? (booleanQuestion[booleanQuestionIndex]? booleanQuestion[booleanQuestionIndex].header: \"\"): \"\"}</h2>\n              <div className=\"LogSelectionBar\" style={{display: 'flex',flexDirection: 'row', justifyContent: 'space-between'}}>\n                  <button onClick={prev('boolean')}>\n                      <h2>{\"<\"}</h2>\n                  </button>\n                  <ResponsiveContainer width=\"100%\" height={400}>\n                      <BarChart\n                          width={730}\n                          height={250}\n                          data={currBooleanResponses?currBooleanResponses: []}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis dataKey=\"name\" />\n                          <YAxis />\n                          <Tooltip />\n                          <Legend />\n                          <Bar dataKey=\"True\" fill=\"#8884d8\" />\n                          <Bar dataKey=\"False\" fill=\"#82ca9d\" />\n                      </BarChart>\n                  </ResponsiveContainer>\n                  <button onClick={next('boolean')}>\n                      <h2>{\">\"}</h2>\n                  </button>\n              </div>\n          </div>\n\n          {/*Multiple Choice Type*/}\n\n          <div className=\"ViewDataH1\">\n              <h1>Multiple Choice type responses</h1>\n          </div>\n          <div className=\"MultipleChoiceQuestionData\">\n              <h2>{multipleQuestion? (multipleQuestion[multipleQuestionIndex]? multipleQuestion[multipleQuestionIndex].header: \"\"): \"\"}</h2>\n              <div className=\"LogSelectionBar\" style={{display: 'flex',flexDirection: 'row', justifyContent: 'space-between'}}>\n                  <button onClick={prev('multiple')}>\n                      <h2>{\"<\"}</h2>\n                  </button>\n                  <ResponsiveContainer width=\"100%\" height={400}>\n                      <BarChart\n                          width={730}\n                          height={250}\n                          data={currMultipleResponses?currMultipleResponses: []}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis dataKey=\"name\" />\n                          <YAxis />\n                          <Tooltip />\n                          <Legend />\n                          <Bar dataKey=\"choice 1\" name = {multipleQuestion? (multipleQuestion[multipleQuestionIndex]? multipleQuestion[multipleQuestionIndex].choices[0]:\"\"): \"\" } fill=\"#8884d8\" />\n                          <Bar dataKey=\"choice 2\" name = {multipleQuestion? (multipleQuestion[multipleQuestionIndex]? multipleQuestion[multipleQuestionIndex].choices[1]:\"\"): \"\" } fill=\"#82ca9d\" />\n                          <Bar dataKey=\"choice 3\" name = {multipleQuestion? (multipleQuestion[multipleQuestionIndex]? multipleQuestion[multipleQuestionIndex].choices[2]:\"\"): \"\" } fill=\"#ffc658\" />\n                      </BarChart>\n                  </ResponsiveContainer>\n                  <button onClick={next('multiple')}>\n                      <h2>{\">\"}</h2>\n                  </button>\n              </div>\n          </div>\n\n\n\n\n\n\n      </div>\n    );\n}\nexport default ViewByQuestion"]},"metadata":{},"sourceType":"module"}