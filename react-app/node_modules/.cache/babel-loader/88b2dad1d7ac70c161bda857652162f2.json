{"ast":null,"code":"var _jsxFileName = \"/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Profile from \"./Profile\";\nimport EditQuestions from \"./EditQuestions\";\nimport LogDay from \"./LogDay\";\nimport ViewData from \"./ViewData\";\nimport { sortByDate } from \"../utils/HelperFunctions\"; //import API methods\n\nimport { logoutUserAPIMethod, getQuestionsAPIMethod, getResponsesAPIMethod, deleteResponseByIdAPIMethod } from \"../api/client.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(props) {\n  _s();\n\n  const [serverCall, setServerCall] = useState(false);\n  const [currUser, setCurrUser] = useState(props.currUser);\n  const [imgURL, setImgURL] = useState();\n  const [questions, setQuestions] = useState([]);\n  const [responses, setResponses] = useState([]);\n  const [currentPage, setCurrentPage] = useState('LogDay'); //user data initialization\n\n  useEffect(() => {\n    if (currUser !== null && currUser !== undefined) {\n      //get questions of current user\n      getQuestionsAPIMethod().then(questions => {\n        setQuestions(sortByDate(questions));\n      }); //get responses of current user\n\n      getResponsesAPIMethod().then(responses => {\n        setResponses(responses);\n      }); //console.log(currUser)\n      //get profile image url of current user\n\n      if (currUser.hasOwnProperty('profile_url') && currUser.profile_url !== '') {\n        setImgURL(currUser.profile_url);\n        console.log('success');\n      } else {\n        setImgURL('');\n        console.log('fail');\n      }\n    }\n  }, [currUser, serverCall]);\n  useEffect(() => {\n    setCurrUser(props.currUser);\n  }, [props]);\n\n  const deleteResponses = () => {\n    getResponsesAPIMethod().then(responses => {\n      responses.map(res => {\n        deleteResponseByIdAPIMethod(res._id);\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MenuBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"Header\",\n        children: \"Day Logger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Menus\",\n        style: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentPage(\"LogDay\"),\n          children: \"Log Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentPage(\"EditQuestions\"),\n          children: \"Edit Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentPage(\"ViewData\"),\n          children: \"View Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ProfileImg\",\n        onClick: () => setCurrentPage(\"Profile\"),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imgURL ? imgURL : 'https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg',\n          style: {\n            width: '40px',\n            borderRadius: '50%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteResponses,\n        children: \"Delete Response Test Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), currentPage == 'LogDay' ? /*#__PURE__*/_jsxDEV(LogDay, {\n      questions: questions,\n      setQuestions: setQuestions,\n      responses: responses,\n      setResponses: setResponses,\n      serverCall: serverCall,\n      setServerCall: setServerCall\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }, this) : currentPage == 'EditQuestions' ? /*#__PURE__*/_jsxDEV(EditQuestions, {\n      questions: questions,\n      setQuestions: setQuestions,\n      responses: responses,\n      setResponses: setResponses,\n      serverCall: serverCall,\n      setServerCall: setServerCall\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }, this) : currentPage == 'Profile' ? /*#__PURE__*/_jsxDEV(Profile, {\n      login: props.login,\n      setCurrUser: props.setCurrUser,\n      currUser: props.currUser,\n      setLogin: props.setLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }, this) : currentPage == 'ViewData' ? /*#__PURE__*/_jsxDEV(ViewData, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"KMtg/hY3Xn6Y4YsOUhfblNyazW8=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/Main.js"],"names":["React","useState","useEffect","Profile","EditQuestions","LogDay","ViewData","sortByDate","logoutUserAPIMethod","getQuestionsAPIMethod","getResponsesAPIMethod","deleteResponseByIdAPIMethod","Main","props","serverCall","setServerCall","currUser","setCurrUser","imgURL","setImgURL","questions","setQuestions","responses","setResponses","currentPage","setCurrentPage","undefined","then","hasOwnProperty","profile_url","console","log","deleteResponses","map","res","_id","display","width","borderRadius","login","setLogin"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport Profile from \"./Profile\";\nimport EditQuestions from \"./EditQuestions\";\nimport LogDay from \"./LogDay\";\nimport ViewData from \"./ViewData\";\nimport {sortByDate} from \"../utils/HelperFunctions\";\n\n//import API methods\nimport {\n    logoutUserAPIMethod,\n    getQuestionsAPIMethod,\n    getResponsesAPIMethod,\n    deleteResponseByIdAPIMethod\n} from \"../api/client.js\";\n\nfunction Main(props) {\n    const [serverCall, setServerCall] = useState(false);\n    const [currUser, setCurrUser] = useState(props.currUser);\n    const [imgURL, setImgURL] = useState();\n    const [questions, setQuestions] = useState([]);\n    const [responses, setResponses] = useState([]);\n    const [currentPage, setCurrentPage] = useState('LogDay');\n\n    //user data initialization\n    useEffect(() => {\n        if (currUser !== null && currUser !== undefined) {\n            //get questions of current user\n            getQuestionsAPIMethod().then((questions) => {\n                setQuestions(sortByDate(questions));\n            });\n\n            //get responses of current user\n            getResponsesAPIMethod().then((responses) => {\n                setResponses(responses);\n            });\n\n            //console.log(currUser)\n            //get profile image url of current user\n            if (currUser.hasOwnProperty('profile_url') && currUser.profile_url !== '') {\n                setImgURL(currUser.profile_url);\n                console.log('success')\n\n            } else {\n                setImgURL('');\n                console.log('fail')\n            }\n        }\n    }, [currUser, serverCall]);\n\n    useEffect(()=>{\n        setCurrUser(props.currUser)\n    }, [props])\n\n    const deleteResponses = () => {\n        getResponsesAPIMethod().then((responses) => {\n            responses.map((res) => {\n                deleteResponseByIdAPIMethod(res._id);\n            });\n        });\n    }\n\n    return (\n        <div className=\"Main\">\n            <div className= \"MenuBar\" >\n\n                <h2 className=\"Header\">Day Logger</h2>\n\n                <div className= \"Menus\" style={{display: 'flex'}}>\n                    <button onClick={() => setCurrentPage(\"LogDay\")}>Log Day</button>\n                    <button onClick={() => setCurrentPage(\"EditQuestions\")}>Edit Questions</button>\n                    <button onClick={() => setCurrentPage(\"ViewData\")}>View Data</button>\n                </div>\n\n                <button className={\"ProfileImg\"} onClick={() => setCurrentPage(\"Profile\")} >\n                    <img src= {imgURL? imgURL:'https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg'} style={{width: '40px', borderRadius: '50%'}}/>\n                </button>\n\n                <button onClick={deleteResponses}>\n                    Delete Response Test Button\n                </button>\n\n            </div>\n            {\n                currentPage == 'LogDay' ?\n                    <LogDay\n                        questions={questions}\n                        setQuestions={setQuestions}\n                        responses={responses}\n                        setResponses={setResponses}\n                        serverCall={serverCall}\n                        setServerCall={setServerCall}\n                    ></LogDay> :\n                    currentPage == 'EditQuestions'?\n                        <EditQuestions\n                            questions={questions}\n                            setQuestions={setQuestions}\n                            responses={responses}\n                            setResponses={setResponses}\n                            serverCall={serverCall}\n                            setServerCall={setServerCall}\n                        ></EditQuestions> :\n                        currentPage == 'Profile'?\n                            <Profile\n                                login={props.login}\n                                setCurrUser = {props.setCurrUser}\n                                currUser={props.currUser}\n                                setLogin={props.setLogin}\n                            ></Profile> :\n                            currentPage == 'ViewData' ?\n                                <ViewData\n\n                                ></ViewData> :\n                                <div></div>\n            }\n\n\n\n\n        </div>\n\n    );\n}\n\nexport default Main"]},"metadata":{},"sourceType":"module"}