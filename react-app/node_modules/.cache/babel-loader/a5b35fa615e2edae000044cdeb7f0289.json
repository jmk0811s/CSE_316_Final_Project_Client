{"ast":null,"code":"var _jsxFileName = \"/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/Question.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Question(props) {\n  _s();\n\n  const [questionDate, setQuestionDate] = useState(props.qDate);\n  const [questionText, setQuestionText] = useState(props.qText);\n  const [questionType, setQuestionType] = useState(props.qType);\n  const [editMode, setEditMode] = useState(true);\n  const [multipleChoices, setMultipleChoices] = useState();\n\n  const handleSelect = prop => e => {\n    if (prop == \"qType\") {\n      setQuestionType(e.target.value);\n    } else if (prop == \"qText\") {\n      setQuestionText(e.target.value);\n    }\n  };\n\n  return editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Question\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: questionText,\n        onChange: handleSelect(\"qText\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleSelect(\"qType\"),\n        value: questionType,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"boolean\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3\",\n          children: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"4\",\n          children: \"multiple choice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"trash\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 14\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Question\",\n    children: questionText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 14\n  }, this);\n}\n\n_s(Question, \"2iv35yALUpk/agvmZFaoDNi68cU=\");\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/Question.js"],"names":["React","useState","Question","props","questionDate","setQuestionDate","qDate","questionText","setQuestionText","qText","questionType","setQuestionType","qType","editMode","setEditMode","multipleChoices","setMultipleChoices","handleSelect","prop","e","target","value","display","justifyContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA;;AAEpB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAiCJ,QAAQ,CAACE,KAAK,CAACG,KAAP,CAA/C;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAiCP,QAAQ,CAACE,KAAK,CAACM,KAAP,CAA/C;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAiCV,QAAQ,CAACE,KAAK,CAACS,KAAP,CAA/C;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACc,eAAD,EAAkBC,kBAAlB,IAAwCf,QAAQ,EAAtD;;AAEA,QAAMgB,YAAY,GAAIC,IAAD,IAAUC,CAAD,IAAO;AACjC,QAAGD,IAAI,IAAI,OAAX,EAAmB;AACfP,MAAAA,eAAe,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACH,KAFD,MAGK,IAAGH,IAAI,IAAI,OAAX,EAAmB;AACpBV,MAAAA,eAAe,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACH;AAEJ,GARD;;AAUA,SAAOR,QAAQ,gBACN;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACG;AAAA,6BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AACO,QAAA,KAAK,EAAEN,YADd;AAEO,QAAA,QAAQ,EAAEU,YAAY,CAAC,OAAD;AAF7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADH,eAMG;AAAK,MAAA,KAAK,EAAE;AAACK,QAAAA,OAAO,EAAE,MAAV;AAAiBC,QAAAA,cAAc,EAAE;AAAjC,OAAZ;AAAA,8BACI;AAAQ,QAAA,QAAQ,EAAEN,YAAY,CAAC,OAAD,CAA9B;AAAyC,QAAA,KAAK,EAAEP,YAAhD;AAAA,gCACI;AAAQ,UAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAQ,UAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADM,gBAiBN;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,cACIH;AADJ;AAAA;AAAA;AAAA;AAAA,UAjBT;AAyBH;;GA3CQL,Q;;KAAAA,Q;AA4CT,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react'\n\nfunction Question(props){\n\n    const [questionDate, setQuestionDate] =useState(props.qDate);\n    const [questionText, setQuestionText] =useState(props.qText);\n    const [questionType, setQuestionType] =useState(props.qType);\n    const [editMode, setEditMode] = useState(true);\n    const [multipleChoices, setMultipleChoices] = useState();\n\n    const handleSelect = (prop)=> (e) => {\n        if(prop == \"qType\"){\n            setQuestionType(e.target.value)\n        }\n        else if(prop == \"qText\"){\n            setQuestionText(e.target.value)\n        }\n\n    }\n\n    return(editMode?\n            (<div className=\"Question\">\n                <form>\n                    <input type=\"text\"\n                           value={questionText}\n                           onChange={handleSelect(\"qText\")}></input>\n                </form>\n                <div style={{display: \"flex\",justifyContent: \"space-between\"}}>\n                    <select onChange={handleSelect(\"qType\")} value={questionType}>\n                        <option value=\"1\">number</option>\n                        <option value=\"2\">boolean</option>\n                        <option value=\"3\">text</option>\n                        <option value=\"4\">multiple choice</option>\n                    </select>\n                    <button>trash</button>\n                </div>\n            </div>):\n            (<div className=\"Question\">\n                {questionText}\n                {/*{questionType == '1'? <input type ='text'></input> :*/}\n                {/*    questionType == '2'? <input>type=</input>*/}\n                {/*}*/}\n            </div>)\n\n    );\n}\nexport default Question"]},"metadata":{},"sourceType":"module"}