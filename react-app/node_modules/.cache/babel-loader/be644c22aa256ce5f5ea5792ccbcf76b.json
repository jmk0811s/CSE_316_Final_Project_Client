{"ast":null,"code":"var _jsxFileName = \"/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Profile from \"./Profile\";\nimport EditQuestions from \"./EditQuestions\";\nimport Daylog from \"./Daylog\";\nimport ViewData from \"./ViewData\"; //import API methods\n\nimport { createDaylogAPIMethod, getCurrentUserAPIMethod, getDaylogsAPIMethod, getQuestionsByDaylogIdAPIMethod, createQuestionAPIMethod, loginUserAPIMethod, logoutUserAPIMethod } from \"../api/client.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(props) {\n  _s();\n\n  const [currUser, setCurrUser] = useState(props.currUser);\n  const [imgURL, setImgURL] = useState(currUser.profile_url);\n  const [daylogs, setDaylogs] = useState([]);\n  const [currentPage, setCurrentPage] = useState('LogData');\n  const [currDate, setCurrentDate] = useState(); //get current user\n\n  useEffect(() => {\n    setCurrUser(props.currUser);\n  }, [props.currUser]);\n  useEffect(() => {\n    if (currUser !== null && currUser !== undefined) {\n      //get daylogs of current user\n      getDaylogsAPIMethod().then(daylogs => {\n        setDaylogs(sortDaylogsByDate(daylogs)); //console.log(daylogs);\n      }); //get profile image url of current user\n\n      if (currUser.hasOwnProperty('profile_url') && currUser.profile_url !== '') {\n        setImgURL(currUser.profile_url);\n      } else {\n        setImgURL('');\n      }\n    }\n  }, [currUser]);\n\n  const sortDaylogsByDate = list => {\n    return list.sort((a, b) => new Date(a.date) - new Date(b.date));\n  };\n\n  const logout = () => {\n    logoutUserAPIMethod().then(() => {\n      props.setCurrUser({});\n      props.setLogin(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MenuBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"Header\",\n        children: \"Day Logger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Menus\",\n        style: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentPage(\"LogData\"),\n          children: \"Log Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentPage(\"EditQuestions\"),\n          children: \"Edit Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentPage(\"ViewData\"),\n          children: \"View Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"testLogout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ProfileImg\",\n        onClick: () => setCurrentPage(\"Profile\"),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imgURL ? imgURL : 'https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg',\n          style: {\n            width: '40px',\n            borderRadius: '50%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), currentPage == 'LogData' ? /*#__PURE__*/_jsxDEV(Daylog, {\n      daylogs: daylogs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }, this) : currentPage == 'EditQuestions' ? /*#__PURE__*/_jsxDEV(EditQuestions, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }, this) : currentPage == 'Profile' ? /*#__PURE__*/_jsxDEV(Profile, {\n      currUser: props.currUser,\n      setLogin: props.setLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }, this) : currentPage == 'ViewData' ? /*#__PURE__*/_jsxDEV(ViewData, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"8+ZZLTKe+PXMSnqqiV06FvXhGFI=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/Main.js"],"names":["React","useState","useEffect","Profile","EditQuestions","Daylog","ViewData","createDaylogAPIMethod","getCurrentUserAPIMethod","getDaylogsAPIMethod","getQuestionsByDaylogIdAPIMethod","createQuestionAPIMethod","loginUserAPIMethod","logoutUserAPIMethod","Main","props","currUser","setCurrUser","imgURL","setImgURL","profile_url","daylogs","setDaylogs","currentPage","setCurrentPage","currDate","setCurrentDate","undefined","then","sortDaylogsByDate","hasOwnProperty","list","sort","a","b","Date","date","logout","setLogin","display","width","borderRadius"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;;AACA,SACIC,qBADJ,EAEIC,uBAFJ,EAGIC,mBAHJ,EAIIC,+BAJJ,EAKIC,uBALJ,EAMIC,kBANJ,EAOIC,mBAPJ,QAQO,kBARP;;;AAUA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAACc,KAAK,CAACC,QAAP,CAAxC;AACA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAACe,QAAQ,CAACI,WAAV,CAApC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACsB,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAAC,SAAD,CAA9C;AACA,QAAM,CAACwB,QAAD,EAAWC,cAAX,IAA6BzB,QAAQ,EAA3C,CALiB,CAOjB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,WAAW,CAACF,KAAK,CAACC,QAAP,CAAX;AACH,GAFQ,EAEN,CAACD,KAAK,CAACC,QAAP,CAFM,CAAT;AAIAd,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAKW,SAAtC,EAAiD;AAC7C;AACAlB,MAAAA,mBAAmB,GAAGmB,IAAtB,CAA4BP,OAAD,IAAa;AACpCC,QAAAA,UAAU,CAACO,iBAAiB,CAACR,OAAD,CAAlB,CAAV,CADoC,CAEpC;AACH,OAHD,EAF6C,CAO7C;;AACA,UAAIL,QAAQ,CAACc,cAAT,CAAwB,aAAxB,KAA0Cd,QAAQ,CAACI,WAAT,KAAyB,EAAvE,EAA2E;AACvED,QAAAA,SAAS,CAACH,QAAQ,CAACI,WAAV,CAAT;AACH,OAFD,MAEO;AACHD,QAAAA,SAAS,CAAC,EAAD,CAAT;AAEH;AACJ;AACJ,GAhBQ,EAgBN,CAACH,QAAD,CAhBM,CAAT;;AAmBA,QAAMa,iBAAiB,GAAIE,IAAD,IAAU;AAChC,WAAOA,IAAI,CAACC,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAU,IAAIC,IAAJ,CAASF,CAAC,CAACG,IAAX,IAAmB,IAAID,IAAJ,CAASD,CAAC,CAACE,IAAX,CAAvC,CAAP;AACH,GAFD;;AAIA,QAAMC,MAAM,GAAG,MAAM;AACjBxB,IAAAA,mBAAmB,GAAGe,IAAtB,CAA2B,MAAM;AAC7Bb,MAAAA,KAAK,CAACE,WAAN,CAAkB,EAAlB;AACAF,MAAAA,KAAK,CAACuB,QAAN,CAAe,KAAf;AACH,KAHD;AAIH,GALD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAE,SAAhB;AAAA,8BAEI;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII;AAAK,QAAA,SAAS,EAAE,OAAhB;AAAwB,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAE;AAAV,SAA/B;AAAA,gCACI;AAAQ,UAAA,OAAO,EAAE,MAAMf,cAAc,CAAC,SAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,OAAO,EAAE,MAAMA,cAAc,CAAC,eAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,OAAO,EAAE,MAAMA,cAAc,CAAC,UAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAUI;AAAQ,QAAA,OAAO,EAAEa,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAcI;AAAQ,QAAA,SAAS,EAAE,YAAnB;AAAiC,QAAA,OAAO,EAAE,MAAMb,cAAc,CAAC,SAAD,CAA9D;AAAA,+BACI;AAAK,UAAA,GAAG,EAAGN,MAAM,GAAEA,MAAF,GAAS,oFAA1B;AAAgH,UAAA,KAAK,EAAE;AAACsB,YAAAA,KAAK,EAAE,MAAR;AAAgBC,YAAAA,YAAY,EAAE;AAA9B;AAAvH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAqBQlB,WAAW,IAAI,SAAf,gBACI,QAAC,MAAD;AACI,MAAA,OAAO,EAAEF;AADb;AAAA;AAAA;AAAA;AAAA,YADJ,GAIIE,WAAW,IAAI,eAAf,gBACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YADJ,GAIIA,WAAW,IAAI,SAAf,gBACI,QAAC,OAAD;AACI,MAAA,QAAQ,EAAER,KAAK,CAACC,QADpB;AAEI,MAAA,QAAQ,EAAED,KAAK,CAACuB;AAFpB;AAAA;AAAA;AAAA;AAAA,YADJ,GAKIf,WAAW,IAAI,UAAf,gBACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADJ,gBAII;AAAA;AAAA;AAAA;AAAA,YAtCxB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgDH;;GA1FQT,I;;KAAAA,I;AA4FT,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport Profile from \"./Profile\";\nimport EditQuestions from \"./EditQuestions\";\nimport Daylog from \"./Daylog\";\nimport ViewData from \"./ViewData\";\n\n//import API methods\nimport {\n    createDaylogAPIMethod,\n    getCurrentUserAPIMethod,\n    getDaylogsAPIMethod,\n    getQuestionsByDaylogIdAPIMethod,\n    createQuestionAPIMethod,\n    loginUserAPIMethod,\n    logoutUserAPIMethod\n} from \"../api/client.js\";\n\nfunction Main(props) {\n    const [currUser, setCurrUser] = useState(props.currUser);\n    const [imgURL, setImgURL] = useState(currUser.profile_url);\n    const [daylogs, setDaylogs] = useState([]);\n    const [currentPage, setCurrentPage] = useState('LogData');\n    const [currDate, setCurrentDate] = useState();\n\n    //get current user\n    useEffect(() => {\n        setCurrUser(props.currUser);\n    }, [props.currUser]);\n\n    useEffect(() => {\n        if (currUser !== null && currUser !== undefined) {\n            //get daylogs of current user\n            getDaylogsAPIMethod().then((daylogs) => {\n                setDaylogs(sortDaylogsByDate(daylogs));\n                //console.log(daylogs);\n            });\n\n            //get profile image url of current user\n            if (currUser.hasOwnProperty('profile_url') && currUser.profile_url !== '') {\n                setImgURL(currUser.profile_url);\n            } else {\n                setImgURL('');\n\n            }\n        }\n    }, [currUser]);\n\n\n    const sortDaylogsByDate = (list) => {\n        return list.sort((a, b) => new Date(a.date) - new Date(b.date));\n    }\n\n    const logout = () => {\n        logoutUserAPIMethod().then(() => {\n            props.setCurrUser({});\n            props.setLogin(false);\n        });\n    }\n\n    return (\n        <div className=\"Main\">\n            <div className= \"MenuBar\" >\n\n                <h2 className=\"Header\">Day Logger</h2>\n\n                <div className= \"Menus\" style={{display: 'flex'}}>\n                    <button onClick={() => setCurrentPage(\"LogData\")}>Log Data</button>\n                    <button onClick={() => setCurrentPage(\"EditQuestions\")}>Edit Questions</button>\n                    <button onClick={() => setCurrentPage(\"ViewData\")}>View Data</button>\n                </div>\n\n                <button onClick={logout}>\n                    testLogout\n                </button>\n\n                <button className={\"ProfileImg\"} onClick={() => setCurrentPage(\"Profile\")} >\n                    <img src= {imgURL? imgURL:'https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg'} style={{width: '40px', borderRadius: '50%'}}/>\n                </button>\n\n            </div>\n            {\n                currentPage == 'LogData' ?\n                    <Daylog\n                        daylogs={daylogs}\n                    ></Daylog> :\n                    currentPage == 'EditQuestions'?\n                        <EditQuestions\n\n                        ></EditQuestions> :\n                        currentPage == 'Profile'?\n                            <Profile\n                                currUser={props.currUser}\n                                setLogin={props.setLogin}\n                            ></Profile> :\n                            currentPage == 'ViewData' ?\n                                <ViewData\n\n                                ></ViewData> :\n                                <div></div>\n            }\n\n\n\n\n        </div>\n\n    );\n}\n\nexport default Main"]},"metadata":{},"sourceType":"module"}