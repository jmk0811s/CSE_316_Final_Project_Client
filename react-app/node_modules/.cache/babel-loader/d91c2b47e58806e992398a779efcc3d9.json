{"ast":null,"code":"var _jsxFileName = \"/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/Question.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport { getQuestionsAPIMethod, getResponsesAPIMethod } from \"../api/client\";\nimport { sortByDate } from \"../utils/HelperFunctions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Question(props) {\n  _s();\n\n  const [readOnly, setReadOnly] = useState(false);\n  const [editMode, setEditMode] = useState(props.editMode);\n  const [type, setType] = useState(props.type);\n  const [header, setHeader] = useState(props.header);\n  const [choices, setChoices] = useState(props.choices); //const [mdate, setMDate] = useState(props.mdate);\n\n  const [nanoId, setNanoId] = useState(props.nanoid); //const [questions, setQuestions] = useState(props.questions);\n\n  const [responses, setResponses] = useState(props.responses);\n  const [currResponse, setCurrResponse] = useState();\n  const [questionId, setQuestionId] = useState(props.questionId);\n  const [date, setDate] = useState(props.date);\n  const [index, setIndex] = useState(props.index);\n  useEffect(() => {\n    setDate(props.date);\n    setEditMode(props.editMode);\n    setType(props.type);\n    setChoices(props.choices);\n    setHeader(props.header); //setMDate(props.mdate);\n\n    setNanoId(props.nanoid); //setQuestions(props.questions);\n\n    setResponses(props.responses);\n    setQuestionId(props.questionId);\n    setReadOnly(props.readOnly);\n    setIndex(props.index);\n    console.log(currResponse);\n  }, [props]);\n  useEffect(() => {\n    //console.log(responses.length !== 0 && responses[0].question === questionId);\n    //console.log(responses.length !== 0 ? responses[0].date : 0);\n    //console.log(props.date);\n    let res = responses.filter(res => res.question === questionId && (res.date === date || res.date.toString().split('T')[0] === props.date.toISOString().split('T')[0]));\n    setCurrResponse(res);\n  }, [responses, props.date]);\n\n  const updateChoice = (e, i) => {\n    let newChoices = [];\n    console.log(\"old cho\");\n    console.log(choices);\n\n    for (let j = 0; j < 3; j++) {\n      if (i === j) {\n        newChoices.push(e.target.value);\n      } else {\n        newChoices.push(choices[j]);\n      }\n    }\n\n    console.log(\"new cho\");\n    console.log(newChoices);\n    props.updateQuestion(newChoices, 'multiple_choice', index);\n  };\n\n  return readOnly ?\n  /*#__PURE__*/\n  //Read-only mode (view data)\n  _jsxDEV(\"div\", {\n    className: \"Question\",\n    style: {\n      marginBottom: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        margin: 0\n      },\n      children: header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), type == \"Text\" ?\n    /*#__PURE__*/\n    //Text type\n    _jsxDEV(\"div\", {\n      className: \"question-response\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"answer\",\n        value: currResponse !== undefined && currResponse.length !== 0 ? currResponse[0].response.text : '',\n        placeholder: \"Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }, this) : type == \"Number\" ?\n    /*#__PURE__*/\n    //Number type\n    _jsxDEV(\"div\", {\n      className: \"question-response\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          width: '150px'\n        },\n        type: \"number\",\n        name: \"answer\",\n        value: currResponse !== undefined && currResponse.length !== 0 ? currResponse[0].response.number : '',\n        placeholder: \"Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }, this) : type == \"Boolean\" ?\n    /*#__PURE__*/\n    //Boolean type\n    _jsxDEV(\"div\", {\n      className: \"question-response\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radio-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: nanoId,\n            value: \"true\",\n            checked: currResponse !== undefined && currResponse.length !== 0 && currResponse[0].response.boolean ? currResponse[0].response.boolean : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 48\n          }, this), \"true\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: nanoId,\n            value: \"false\",\n            checked: currResponse !== undefined && currResponse.length !== 0 && !currResponse[0].response.boolean ? !currResponse[0].response.boolean : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 48\n          }, this), \"false\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }, this) : type == \"MultipleChoice\" ?\n    /*#__PURE__*/\n    //MultipleChoice type\n    _jsxDEV(\"div\", {\n      className: \"radio-wrapper2\",\n      children: choices.map((choice, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radio-wrapper3\",\n        style: {\n          display: 'flex',\n          marginTop: '10px',\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            margin: \"0\",\n            padding: '0'\n          },\n          type: \"radio\",\n          name: nanoId,\n          value: \"true\",\n          checked: currResponse !== undefined && currResponse.length !== 0 && currResponse[0].response.multiple_choice ? currResponse[0].response.multiple_choice[i] : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 53\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: \"0\",\n            paddingLeft: '10px'\n          },\n          children: choice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 53\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 49\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 37\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 13\n  }, this) : editMode ?\n  /*#__PURE__*/\n  //Edit mode\n  _jsxDEV(\"div\", {\n    className: \"Question\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-header\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        // question header\n        type: \"text\",\n        style: {\n          height: \"30px\"\n        },\n        name: \"header\",\n        value: header,\n        placeholder: \"Header\",\n        onChange: e => {\n          setHeader(e.target.value);\n          props.updateQuestion(e.target.value, 'header', index);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selectAndDelete\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        // dropdown question type selection menu\n        value: type,\n        style: {\n          height: \"30px\"\n        },\n        onChange: e => {\n          setType(e.target.value);\n          props.updateQuestion(e.target.value, 'type', index);\n        },\n        className: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Text\",\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Number\",\n          children: \"Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Boolean\",\n          children: \"Boolean\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"MultipleChoice\",\n          children: \"Multiple Choice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.deleteQuestion(nanoId),\n        style: {\n          background: \"transparent\",\n          border: \"none\",\n          padding: \"0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-icons\",\n          children: \"delete_outline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }, this), type === 'MultipleChoice' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"radio-wrapper1\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"radio\",\n          value: \"true\",\n          checked: false,\n          style: {\n            margin: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"radio-input\",\n          style: {\n            borderRight: 'none',\n            borderLeft: 'none',\n            borderTop: 'none',\n            borderRadius: 0\n          },\n          type: \"text\",\n          name: \"text\",\n          value: choices[0],\n          placeholder: \"new choice\",\n          onChange: e => updateChoice(e, 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"radio\",\n          value: \"true\",\n          checked: false,\n          style: {\n            margin: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"radio-input\",\n          style: {\n            borderRight: 'none',\n            borderLeft: 'none',\n            borderTop: 'none',\n            borderRadius: 0\n          },\n          type: \"text\",\n          name: \"text\",\n          value: choices[1],\n          placeholder: \"new choice\",\n          onChange: e => updateChoice(e, 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"radio\",\n          value: \"true\",\n          checked: false,\n          style: {\n            margin: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"radio-input\",\n          style: {\n            borderRight: 'none',\n            borderLeft: 'none',\n            borderTop: 'none',\n            borderRadius: 0\n          },\n          type: \"text\",\n          name: \"text\",\n          value: choices[2],\n          placeholder: \"new choice\",\n          onChange: e => updateChoice(e, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 29\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 17\n  }, this) :\n  /*#__PURE__*/\n  // Answer mode\n  _jsxDEV(\"div\", {\n    className: \"Question\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        margin: 0\n      },\n      children: header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }, this), type == \"Text\" ?\n    /*#__PURE__*/\n    //Text type\n    _jsxDEV(\"div\", {\n      className: \"question-response\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"answer\",\n        value: currResponse !== undefined && currResponse.length !== 0 ? currResponse[0].response.text : '',\n        placeholder: \"Response\",\n        onChange: e => {\n          props.updateResponse(e.target.value, 'Text', index, choices, currResponse[0], questionId);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 29\n    }, this) : type == \"Number\" ?\n    /*#__PURE__*/\n    //Number type\n    _jsxDEV(\"div\", {\n      className: \"question-response\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          width: '150px'\n        },\n        type: \"number\",\n        name: \"answer\",\n        value: currResponse !== undefined && currResponse.length !== 0 ? currResponse[0].response.number : '',\n        placeholder: \"Response\",\n        onChange: e => {\n          props.updateResponse(e.target.value, 'Number', index, choices, currResponse[0], questionId);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 33\n    }, this) : type == \"Boolean\" ?\n    /*#__PURE__*/\n    //Boolean type\n    _jsxDEV(\"div\", {\n      className: \"question-response\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radio-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: nanoId,\n            value: \"true\",\n            checked: currResponse !== undefined && currResponse.length !== 0 && currResponse[0].response.boolean ? currResponse[0].response.boolean : null,\n            onChange: e => {\n              props.updateResponse(e.target.value, 'Boolean', index, choices, currResponse[0], questionId);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 52\n          }, this), \"true\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: nanoId,\n            value: \"false\",\n            checked: currResponse !== undefined && currResponse.length !== 0 && !currResponse[0].response.boolean ? !currResponse[0].response.boolean : null,\n            onChange: e => {\n              props.updateResponse(e.target.value, 'Boolean', index, choices, currResponse[0], questionId);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 52\n          }, this), \"false\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 37\n    }, this) : type == \"MultipleChoice\" ?\n    /*#__PURE__*/\n    //MultipleChoice type\n    _jsxDEV(\"div\", {\n      className: \"radio-wrapper2\",\n      children: choices.map((choice, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radio-wrapper3\",\n        style: {\n          display: 'flex',\n          marginTop: '10px',\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            margin: \"0\",\n            padding: '0'\n          },\n          type: \"radio\",\n          name: nanoId,\n          value: \"true\",\n          checked: currResponse !== undefined && currResponse.length !== 0 && currResponse[0].response.multiple_choice ? currResponse[0].response.multiple_choice[i] : null,\n          onChange: e => {\n            props.updateResponse(e.target.value, 'MultipleChoice', i, choices, currResponse[0], questionId);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 57\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: \"0\",\n            paddingLeft: '10px'\n          },\n          children: choice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 57\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 53\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 41\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 17\n  }, this);\n}\n\n_s(Question, \"/XRq/8l+TrrQjHEted8oGotMP8c=\");\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/Question.js"],"names":["React","useState","useEffect","nanoid","getQuestionsAPIMethod","getResponsesAPIMethod","sortByDate","Question","props","readOnly","setReadOnly","editMode","setEditMode","type","setType","header","setHeader","choices","setChoices","nanoId","setNanoId","responses","setResponses","currResponse","setCurrResponse","questionId","setQuestionId","date","setDate","index","setIndex","console","log","res","filter","question","toString","split","toISOString","updateChoice","e","i","newChoices","j","push","target","value","updateQuestion","marginBottom","margin","undefined","length","response","text","width","number","boolean","map","choice","display","marginTop","padding","multiple_choice","paddingLeft","height","deleteQuestion","background","border","borderRight","borderLeft","borderTop","borderRadius","updateResponse"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {nanoid} from 'nanoid';\nimport {getQuestionsAPIMethod, getResponsesAPIMethod} from \"../api/client\";\nimport {sortByDate} from \"../utils/HelperFunctions\";\n\nfunction Question(props) {\n    const [readOnly, setReadOnly] = useState(false);\n    const [editMode, setEditMode] = useState(props.editMode);\n    const [type, setType] = useState(props.type);\n    const [header, setHeader] = useState(props.header);\n    const [choices, setChoices] = useState(props.choices);\n    //const [mdate, setMDate] = useState(props.mdate);\n    const [nanoId, setNanoId] = useState(props.nanoid);\n    //const [questions, setQuestions] = useState(props.questions);\n    const [responses, setResponses] = useState(props.responses);\n    const [currResponse, setCurrResponse] = useState();\n    const [questionId, setQuestionId] = useState(props.questionId);\n    const [date, setDate] = useState(props.date);\n    const [index, setIndex] = useState(props.index);\n\n    useEffect(() => {\n        setDate(props.date);\n        setEditMode(props.editMode);\n        setType(props.type);\n        setChoices(props.choices);\n        setHeader(props.header);\n        //setMDate(props.mdate);\n        setNanoId(props.nanoid);\n        //setQuestions(props.questions);\n        setResponses(props.responses);\n        setQuestionId(props.questionId);\n        setReadOnly(props.readOnly);\n        setIndex(props.index);\n        console.log(currResponse);\n    }, [props]);\n\n    useEffect(() => {\n        //console.log(responses.length !== 0 && responses[0].question === questionId);\n        //console.log(responses.length !== 0 ? responses[0].date : 0);\n        //console.log(props.date);\n        let res = responses.filter((res) =>\n            res.question === questionId &&\n            (\n                res.date === date\n                ||\n                res.date.toString().split('T')[0] === props.date.toISOString().split('T')[0]\n            )\n        )\n        setCurrResponse(res);\n    }, [responses, props.date]);\n\n    const updateChoice = (e, i) => {\n        let newChoices = [];\n        console.log(\"old cho\");\n        console.log(choices);\n        for (let j = 0; j < 3; j++) {\n            if (i === j) {\n                newChoices.push(e.target.value);\n            }\n            else {\n                newChoices.push(choices[j]);\n            }\n        }\n        console.log(\"new cho\");\n        console.log(newChoices);\n        props.updateQuestion(newChoices, 'multiple_choice', index);\n    }\n\n    return (\n        readOnly ?\n            //Read-only mode (view data)\n            <div className=\"Question\" style={{marginBottom:\"50px\"}}>\n                <h3 style={{margin:0}}>{header}</h3>\n                {\n                    type == \"Text\" ?\n                        //Text type\n                        <div className=\"question-response\">\n                            <input\n                                type=\"text\"\n                                name=\"answer\"\n                                value={currResponse !== undefined && currResponse.length !== 0 ? currResponse[0].response.text : ''}\n                                placeholder={\"Response\"}\n                            />\n                        </div>\n                        :\n                        type == \"Number\" ?\n                            //Number type\n                            <div className=\"question-response\">\n                                <input\n                                    style={{width: '150px'}}\n                                    type=\"number\"\n                                    name=\"answer\"\n                                    value={currResponse !== undefined && currResponse.length !== 0 ? currResponse[0].response.number : ''}\n                                    placeholder={\"Response\"}\n                                />\n                            </div>\n                            :\n                            type == \"Boolean\" ?\n                                //Boolean type\n                                <div className=\"question-response\">\n                                    <div className=\"radio-wrapper\">\n                                        <label><input\n                                            type=\"radio\"\n                                            name={nanoId}\n                                            value=\"true\"\n                                            checked={currResponse !== undefined && currResponse.length !== 0 && currResponse[0].response.boolean ? currResponse[0].response.boolean : null}\n                                        />true</label>\n                                        <label><input\n                                            type=\"radio\"\n                                            name={nanoId}\n                                            value=\"false\"\n                                            checked={currResponse !== undefined && currResponse.length !== 0 && !currResponse[0].response.boolean ? !currResponse[0].response.boolean : null}\n                                        />false</label>\n                                    </div>\n                                </div>\n                                :\n                                type == \"MultipleChoice\" ?\n                                    //MultipleChoice type\n                                    <div className=\"radio-wrapper2\">\n                                        {\n                                            choices.map((choice, i) =>\n                                                <div className=\"radio-wrapper3\" style={{display: 'flex', marginTop: '10px', marginBottom: '10px'}}>\n                                                    <input\n                                                        style={{margin: \"0\", padding: '0'}}\n                                                        type=\"radio\"\n                                                        name={nanoId}\n                                                        value=\"true\"\n                                                        checked={currResponse !== undefined && currResponse.length !== 0 && currResponse[0].response.multiple_choice ? currResponse[0].response.multiple_choice[i] : null}\n                                                    />\n                                                    <p style={{margin: \"0\", paddingLeft: '10px'}}>{choice}</p>\n                                                </div>\n                                            )\n                                        }\n                                    </div>\n                                    :\n                                    null\n                }\n            </div>\n            :\n            editMode ?\n                //Edit mode\n                <div className=\"Question\">\n                    <div className=\"question-header\">\n                        <input // question header\n                            type=\"text\"\n                            style={{height: \"30px\"}}\n                            name=\"header\"\n                            value={header}\n                            placeholder={\"Header\"}\n                            onChange={(e) => {setHeader(e.target.value); props.updateQuestion(e.target.value, 'header', index);}}/>\n                    </div>\n                    <div className=\"selectAndDelete\" >\n                        <select // dropdown question type selection menu\n                            value={type}\n                            style={{height: \"30px\"}}\n                            onChange={(e) => {setType(e.target.value); props.updateQuestion(e.target.value, 'type', index);}}\n                            className=\"dropdown\">\n                            <option value=\"Text\">Text</option>\n                            <option value=\"Number\">Number</option>\n                            <option value=\"Boolean\">Boolean</option>\n                            <option value=\"MultipleChoice\">Multiple Choice</option>\n                        </select>\n                        <button onClick={() => props.deleteQuestion(nanoId)} style={{background: \"transparent\", border: \"none\", padding: \"0px\"}}>\n                            <span  className=\"material-icons\">delete_outline</span>\n                        </button>\n                    </div>\n\n                    {\n                        type === 'MultipleChoice' ?\n                            <div className=\"radio-wrapper1\">\n                                <label>\n                                    <input type=\"radio\" name=\"radio\" value=\"true\" checked={false} style={{margin:0}}/>\n                                    <input className=\"radio-input\" style={{borderRight: 'none', borderLeft: 'none', borderTop: 'none', borderRadius: 0}} type=\"text\" name=\"text\" value={choices[0]} placeholder=\"new choice\" onChange={(e) => updateChoice(e, 0)}/>\n                                </label>\n                                <label>\n                                    <input type=\"radio\" name=\"radio\" value=\"true\" checked={false} style={{margin:0}}/>\n                                    <input className=\"radio-input\" style={{borderRight: 'none', borderLeft: 'none', borderTop: 'none', borderRadius: 0}} type=\"text\" name=\"text\" value={choices[1]} placeholder=\"new choice\" onChange={(e) => updateChoice(e, 1)}/>\n                                </label>\n                                <label>\n                                    <input type=\"radio\" name=\"radio\" value=\"true\" checked={false} style={{margin:0}}/>\n                                    <input className=\"radio-input\" style={{borderRight: 'none', borderLeft: 'none', borderTop: 'none', borderRadius: 0}} type=\"text\" name=\"text\" value={choices[2]} placeholder=\"new choice\" onChange={(e) => updateChoice(e, 2)}/>\n                                </label>\n                            </div>\n                            :\n                            null\n                    }\n\n                </div>\n                :\n                // Answer mode\n                <div className=\"Question\">\n                    <h3 style={{margin:0}}>{header}</h3>\n                    {\n                        type == \"Text\" ?\n                            //Text type\n                            <div className=\"question-response\">\n                                <input\n                                    type=\"text\"\n                                    name=\"answer\"\n                                    value={currResponse !== undefined && currResponse.length !== 0 ? currResponse[0].response.text : ''}\n                                    placeholder={\"Response\"}\n                                    onChange={(e) => {props.updateResponse(e.target.value, 'Text', index, choices, currResponse[0], questionId)}}\n                                />\n                            </div>\n                            :\n                            type == \"Number\" ?\n                                //Number type\n                                <div className=\"question-response\">\n                                    <input\n                                        style={{width: '150px'}}\n                                        type=\"number\"\n                                        name=\"answer\"\n                                        value={currResponse !== undefined && currResponse.length !== 0 ? currResponse[0].response.number : ''}\n                                        placeholder={\"Response\"}\n                                        onChange={(e) => {props.updateResponse(e.target.value, 'Number', index, choices, currResponse[0], questionId)}}\n                                    />\n                                </div>\n                                :\n                                type == \"Boolean\" ?\n                                    //Boolean type\n                                    <div className=\"question-response\">\n                                        <div className=\"radio-wrapper\">\n                                            <label><input\n                                                type=\"radio\"\n                                                name={nanoId}\n                                                value=\"true\"\n                                                checked={currResponse !== undefined && currResponse.length !== 0 && currResponse[0].response.boolean ? currResponse[0].response.boolean : null}\n                                                onChange={(e) => {props.updateResponse(e.target.value, 'Boolean', index, choices, currResponse[0], questionId)}}\n                                            />true</label>\n                                            <label><input\n                                                type=\"radio\"\n                                                name={nanoId}\n                                                value=\"false\"\n                                                checked={currResponse !== undefined && currResponse.length !== 0 && !currResponse[0].response.boolean ? !currResponse[0].response.boolean : null}\n                                                onChange={(e) => {props.updateResponse(e.target.value, 'Boolean', index, choices, currResponse[0], questionId)}}\n                                            />false</label>\n                                        </div>\n                                    </div>\n                                    :\n                                    type == \"MultipleChoice\" ?\n                                        //MultipleChoice type\n                                        <div className=\"radio-wrapper2\">\n                                            {\n                                                choices.map((choice, i) =>\n                                                    <div className=\"radio-wrapper3\" style={{display: 'flex', marginTop: '10px', marginBottom: '10px'}}>\n                                                        <input\n                                                            style={{margin: \"0\", padding: '0'}}\n                                                            type=\"radio\"\n                                                            name={nanoId}\n                                                            value=\"true\"\n                                                            checked={currResponse !== undefined && currResponse.length !== 0 && currResponse[0].response.multiple_choice ? currResponse[0].response.multiple_choice[i] : null}\n                                                            onChange={(e) => {props.updateResponse(e.target.value, 'MultipleChoice', i, choices, currResponse[0], questionId)}}\n                                                        />\n                                                        <p style={{margin: \"0\", paddingLeft: '10px'}}>{choice}</p>\n                                                    </div>\n                                                )\n                                            }\n                                        </div>\n                                        :\n                                        null\n                    }\n                </div>\n    );\n}\nexport default Question"]},"metadata":{},"sourceType":"module"}