{"ast":null,"code":"var _jsxFileName = \"/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/Daylog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Question from \"./Question\";\nimport { getCurrentUserAPIMethod, getDaylogsAPIMethod, getQuestionsByDaylogIdAPIMethod } from \"../api/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Daylog(props) {\n  _s();\n\n  const [daylogs, setDaylogs] = useState({});\n  const [currDaylog, setCurrDaylog] = useState({});\n  const [currQuestions, setCurrQuestions] = useState([]);\n  const [selectedDate, setSelectedDate] = useState();\n  useEffect(() => {\n    getDaylogsAPIMethod().then(daylogs => {\n      setDaylogs(daylogs);\n      setCurrDaylog(daylogs[0]);\n      setCurrQuestions(getQuestionsByDaylogIdAPIMethod(daylogs[0]));\n      setSelectedDate(dateToString(new Date(daylogs[0].date)));\n    });\n  }, [props.daylogs]);\n\n  const dateToString = date => {\n    return date.getFullYear() + \" / \" + (date.getMonth() + 1) + \" / \" + date.getDate();\n  };\n\n  return selectedDate ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LogSelectionBar\",\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currDaylog.qSet ? currDaylog.qSet.map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          listStyle: \"none\",\n          padding: \"5px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Question, {\n          qText: question.qText,\n          qType: question.qType,\n          qDate: question.qDate,\n          qChoices: question.qChoices,\n          editMode: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SubmitButton\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 17\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(Daylog, \"aMuX7Lt91e0DmE8qwP8jPEfSz8A=\");\n\n_c = Daylog;\nexport default Daylog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Daylog\");","map":{"version":3,"sources":["/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/Daylog.js"],"names":["React","useEffect","useState","Question","getCurrentUserAPIMethod","getDaylogsAPIMethod","getQuestionsByDaylogIdAPIMethod","Daylog","props","daylogs","setDaylogs","currDaylog","setCurrDaylog","currQuestions","setCurrQuestions","selectedDate","setSelectedDate","then","dateToString","Date","date","getFullYear","getMonth","getDate","display","justifyContent","qSet","map","question","listStyle","padding","qText","qType","qDate","qChoices"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,uBAAR,EAAiCC,mBAAjC,EAAsDC,+BAAtD,QAA4F,eAA5F;;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAsB;AAAA;;AAClB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,EAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,mBAAmB,GAAGY,IAAtB,CAA4BR,OAAD,IAAa;AACpCC,MAAAA,UAAU,CAACD,OAAD,CAAV;AACAG,MAAAA,aAAa,CAACH,OAAO,CAAC,CAAD,CAAR,CAAb;AACAK,MAAAA,gBAAgB,CAACR,+BAA+B,CAACG,OAAO,CAAC,CAAD,CAAR,CAAhC,CAAhB;AACAO,MAAAA,eAAe,CAACE,YAAY,CAAC,IAAIC,IAAJ,CAASV,OAAO,CAAC,CAAD,CAAP,CAAWW,IAApB,CAAD,CAAb,CAAf;AACH,KALD;AAMH,GAPQ,EAON,CAACZ,KAAK,CAACC,OAAP,CAPM,CAAT;;AASA,QAAMS,YAAY,GAAIE,IAAD,IAAU;AAC3B,WAAOA,IAAI,CAACC,WAAL,KAAqB,KAArB,IAA8BD,IAAI,CAACE,QAAL,KAAkB,CAAhD,IAAqD,KAArD,GAA6DF,IAAI,CAACG,OAAL,EAApE;AACH,GAFD;;AAIA,SACIR,YAAY,gBACJ;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,KAAK,EAAE;AAACS,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,cAAc,EAAE;AAAlC,OAAxC;AAAA,8BACI;AAAA,+BACI;AAAA,oBAAK;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,kBACKV;AADL;AAAA;AAAA;AAAA;AAAA,cAJJ,eAQI;AAAA,+BACI;AAAA,oBAAK;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAaI;AAAA,gBACKJ,UAAU,CAACe,IAAX,GAAmBf,UAAU,CAACe,IAAX,CAAgBC,GAAhB,CAAqBC,QAAD,iBACpC;AAAI,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAE,MAAZ;AAAmBC,UAAAA,OAAO,EAAE;AAA5B,SAAX;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAIF,QAAQ,CAACG,KAA5B;AACU,UAAA,KAAK,EAAIH,QAAQ,CAACI,KAD5B;AAEU,UAAA,KAAK,EAAIJ,QAAQ,CAACK,KAF5B;AAGU,UAAA,QAAQ,EAAIL,QAAQ,CAACM,QAH/B;AAIU,UAAA,QAAQ,EAAI;AAJtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADgB,CAAnB,gBASE;AAVP;AAAA;AAAA;AAAA;AAAA,YAbJ,eAyBI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADI,gBAgCJ,qCAjCZ;AAmCH;;GAtDQ3B,M;;KAAAA,M;AAuDT,eAAeA,MAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport Question from \"./Question\";\nimport {getCurrentUserAPIMethod, getDaylogsAPIMethod, getQuestionsByDaylogIdAPIMethod} from \"../api/client\";\n\nfunction Daylog(props){\n    const [daylogs, setDaylogs] = useState({});\n    const [currDaylog, setCurrDaylog] = useState({});\n    const [currQuestions, setCurrQuestions] = useState([]);\n    const [selectedDate, setSelectedDate] = useState();\n\n    useEffect(() => {\n        getDaylogsAPIMethod().then((daylogs) => {\n            setDaylogs(daylogs);\n            setCurrDaylog(daylogs[0]);\n            setCurrQuestions(getQuestionsByDaylogIdAPIMethod(daylogs[0]));\n            setSelectedDate(dateToString(new Date(daylogs[0].date)));\n        })\n    }, [props.daylogs]);\n\n    const dateToString = (date) => {\n        return date.getFullYear() + \" / \" + (date.getMonth() + 1) + \" / \" + date.getDate();\n    }\n\n    return (\n        selectedDate? (\n                <div>\n                    <div className=\"LogSelectionBar\" style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                        <button>\n                            <h2>{\"<\"}</h2>\n                        </button>\n                        <h2>\n                            {selectedDate}\n                        </h2>\n\n                        <button>\n                            <h2>{\">\"}</h2>\n                        </button>\n                    </div>\n                    <div>\n                        {currDaylog.qSet ? (currDaylog.qSet.map((question)=>\n                            <li style={{listStyle: \"none\",padding: \"5px\"}}>\n                                <Question qText = {question.qText}\n                                          qType = {question.qType}\n                                          qDate = {question.qDate}\n                                          qChoices = {question.qChoices}\n                                          editMode = {false}\n                                />\n                            </li>\n                        )):<></>}\n                    </div>\n                    <div className=\"SubmitButton\" >\n                        <button>Submit</button>\n                    </div>\n\n\n                </div>):\n                <></>\n    );\n}\nexport default Daylog\n"]},"metadata":{},"sourceType":"module"}