{"ast":null,"code":"var _jsxFileName = \"/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/LogDay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Question from \"./Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LogDay(props) {\n  _s();\n\n  const [questions, setQuestions] = useState([props.questions]);\n  const [responses, setResponses] = useState([props.responses]);\n  const [date, setDate] = useState(new Date());\n  useEffect(() => {\n    setQuestions(props.questions);\n    setResponses(props.responses);\n    console.log(responses.filter(() => true));\n  }, [props]);\n\n  const dateToString = date => {\n    return date.getFullYear() + \" / \" + (date.getMonth() + 1) + \" / \" + date.getDate();\n  };\n\n  const next = () => {\n    let temp = new Date(date);\n    temp.setDate(temp.getDate() + 1);\n\n    if (temp - new Date() < 0) {\n      setDate(temp);\n    }\n  };\n\n  const prev = () => {\n    let temp = new Date(date);\n    temp.setDate(temp.getDate() - 1);\n    setDate(temp);\n  };\n\n  const handleSubmit = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LogSelectionBar\",\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prev,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: dateToString(date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: next,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), questions ? questions.filter(question => question.status !== 'DELETED').map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"QuestionList\",\n      style: {\n        listStyle: \"none\",\n        padding: \"5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Question, {\n        editMode: false,\n        type: question.type,\n        header: question.header,\n        choices: question.choices,\n        mdate: question.mdate,\n        nanoid: question.nanoid,\n        questions: questions,\n        setQuestions: setQuestions,\n        responses: responses,\n        questionId: question._id,\n        setResponses: setResponses,\n        date: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SubmitButton\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LogDay, \"BgWtpCtddAPxbXYS8GQJOcAe3C8=\");\n\n_c = LogDay;\nexport default LogDay;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogDay\");","map":{"version":3,"sources":["/Users/guenuk/Documents/GitHub/CSE_316_Final_Project_Client/react-app/src/components/LogDay.js"],"names":["React","useState","useEffect","Question","LogDay","props","questions","setQuestions","responses","setResponses","date","setDate","Date","console","log","filter","dateToString","getFullYear","getMonth","getDate","next","temp","prev","handleSubmit","display","justifyContent","question","status","map","listStyle","padding","type","header","choices","mdate","nanoid","_id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport Question from \"./Question\";\n\nfunction LogDay(props) {\n    const [questions, setQuestions] = useState([props.questions]);\n    const [responses, setResponses] = useState([props.responses]);\n    const [date, setDate] = useState(new Date());\n\n    useEffect(() => {\n        setQuestions(props.questions);\n        setResponses(props.responses);\n        console.log(responses.filter(() => true));\n    }, [props]);\n\n    const dateToString = (date) => {\n        return date.getFullYear() + \" / \" + (date.getMonth() + 1) + \" / \" + date.getDate();\n    }\n\n    const next = () => {\n        let temp = new Date(date);\n        temp.setDate(temp.getDate() + 1);\n        if (temp - new Date() < 0) {\n            setDate(temp);\n        }\n    }\n\n    const prev = () => {\n        let temp = new Date(date);\n        temp.setDate(temp.getDate() - 1);\n        setDate(temp);\n    }\n\n    const handleSubmit = () => {\n\n    }\n\n    return (\n        <div>\n            <div className=\"LogSelectionBar\" style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                <button onClick={prev}>\n                    <h2>{\"<\"}</h2>\n                </button>\n                <h2>\n                    {dateToString(date)}\n                </h2>\n                <button onClick={next}>\n                    <h2>{\">\"}</h2>\n                </button>\n            </div>\n            {\n                questions ?\n                    questions.filter((question) => question.status !== 'DELETED').map((question) =>\n                        <li className=\"QuestionList\" style={{listStyle: \"none\", padding: \"5px\"}}>\n                            <Question\n                                editMode={false}\n                                type={question.type}\n                                header={question.header}\n                                choices={question.choices}\n                                mdate={question.mdate}\n                                nanoid={question.nanoid}\n                                questions={questions}\n                                setQuestions={setQuestions}\n                                responses={responses}\n                                questionId={question._id}\n                                setResponses={setResponses}\n                                date={date}\n                            />\n                        </li>\n                    )\n                    : <></>\n            }\n            <div className=\"SubmitButton\" >\n                <button onClick={handleSubmit}>Submit</button>\n            </div>\n        </div>\n    );\n}\nexport default LogDay"]},"metadata":{},"sourceType":"module"}